[{"D:\\React\\dashboard-new\\src\\index.tsx":"1","D:\\React\\dashboard-new\\src\\presentation\\store\\store.ts":"2","D:\\React\\dashboard-new\\src\\presentation\\theme\\theme.tsx":"3","D:\\React\\dashboard-new\\src\\presentation\\app\\App.tsx":"4","D:\\React\\dashboard-new\\src\\presentation\\store\\reducers.ts":"5","D:\\React\\dashboard-new\\src\\di\\injection.ts":"6","D:\\React\\dashboard-new\\src\\presentation\\route\\routes.ts":"7","D:\\React\\dashboard-new\\src\\presentation\\app\\ErrorBoundary.tsx":"8","D:\\React\\dashboard-new\\src\\di\\module\\usecases_module.ts":"9","D:\\React\\dashboard-new\\src\\di\\module\\gateways_module.ts":"10","D:\\React\\dashboard-new\\src\\di\\container\\Container.ts":"11","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\IAppCache.ts":"12","D:\\React\\dashboard-new\\src\\infrastructure\\service\\AuthService.ts":"13","D:\\React\\dashboard-new\\src\\domain\\gateway\\IAuthService.ts":"14","D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\LoginUseCase.ts":"15","D:\\React\\dashboard-new\\src\\infrastructure\\model\\UserModel.ts":"16","D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\ParamUseCase.ts":"17","D:\\React\\dashboard-new\\src\\domain\\entity\\User.ts":"18","D:\\React\\dashboard-new\\src\\di\\module\\network_module.ts":"19","D:\\React\\dashboard-new\\src\\di\\module\\cache_module.ts":"20","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\config.js":"21","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\IApiExceptionFactory.ts":"22","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\ApiExceptionFactory.ts":"23","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\IApiClinet.ts":"24","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\AxiosApiClient.ts":"25","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\cache_constants.ts":"26","D:\\React\\dashboard-new\\src\\domain\\exception\\Exception.ts":"27","D:\\React\\dashboard-new\\src\\domain\\exception\\UnauthorizedException.ts":"28","D:\\React\\dashboard-new\\src\\infrastructure\\exception\\ServerException.ts":"29","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\auth\\LoginResponse.ts":"30","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\BaseResponse.ts":"31","D:\\React\\dashboard-new\\src\\presentation\\theme\\fonts\\productSansFontProps.ts":"32","D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRepository.ts":"33","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\AxiosApiClientProxy.ts":"34","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\AppCache.ts":"35","D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\RegisterUseCase.ts":"36","D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRepository.ts":"37","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\LoggingInterceptor.ts":"38","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\ICacheStorage.ts":"39","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\WebLocalStorage.ts":"40","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUserDetailsUseCase.ts":"41","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUsersUseCase.ts":"42","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\AuthorizationInterceptor.ts":"43","D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\UseCase.ts":"44","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\Dashboard.tsx":"45","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\chats\\Chats.tsx":"46","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\Workspace.tsx":"47","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupsList.tsx":"48","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentsList.tsx":"49","D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRoleRepository.ts":"50","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\DeleteUserUseCase.ts":"51","D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRoleRepository.ts":"52","D:\\React\\dashboard-new\\src\\domain\\interactor\\userrole\\GetUserRolesUseCase.ts":"53","D:\\React\\dashboard-new\\src\\domain\\exception\\UnknownException.ts":"54","D:\\React\\dashboard-new\\src\\domain\\entity\\UserRole.ts":"55","D:\\React\\dashboard-new\\src\\presentation\\route\\AuthenticatedRoute.tsx":"56","D:\\React\\dashboard-new\\src\\domain\\gateway\\IGroupRepository.ts":"57","D:\\React\\dashboard-new\\src\\infrastructure\\repository\\GroupRepository.ts":"58","D:\\React\\dashboard-new\\src\\infrastructure\\model\\Mapper.ts":"59","D:\\React\\dashboard-new\\src\\infrastructure\\model\\GroupModel.ts":"60","D:\\React\\dashboard-new\\src\\domain\\entity\\Group.ts":"61","D:\\React\\dashboard-new\\src\\presentation\\reducers\\login\\login_reducer.ts":"62","D:\\React\\dashboard-new\\src\\presentation\\pages\\Login.tsx":"63","D:\\React\\dashboard-new\\src\\presentation\\pages\\Register.tsx":"64","D:\\React\\dashboard-new\\src\\presentation\\reducers\\login\\login_states.ts":"65","D:\\React\\dashboard-new\\src\\presentation\\actions\\login_actions.ts":"66","D:\\React\\dashboard-new\\src\\presentation\\reducers\\register\\register_reducer.ts":"67","D:\\React\\dashboard-new\\src\\presentation\\actions\\register_actions.ts":"68","D:\\React\\dashboard-new\\src\\presentation\\reducers\\register\\register_states.ts":"69","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceInfoSection.tsx":"70","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceListSection.tsx":"71","D:\\React\\dashboard-new\\src\\presentation\\actions\\users_actions.ts":"72","D:\\React\\dashboard-new\\src\\presentation\\reducers\\users\\users_reducer.ts":"73","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentDetails.tsx":"74","D:\\React\\dashboard-new\\src\\presentation\\reducers\\users\\users_states.ts":"75","D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentBanner.tsx":"76","D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentPerformance.tsx":"77","D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentAdditionalInfo.tsx":"78","D:\\React\\dashboard-new\\src\\presentation\\components\\app\\loader\\TicketLoading.tsx":"79","D:\\React\\dashboard-new\\src\\presentation\\components\\app\\error\\Error.tsx":"80","D:\\React\\dashboard-new\\src\\presentation\\components\\wrapper\\DashboardDrawerAndAppBar.tsx":"81","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupDetails.tsx":"82","D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\AgentListItem.tsx":"83","D:\\React\\dashboard-new\\src\\presentation\\components\\groups\\GroupsListItem.tsx":"84","D:\\React\\dashboard-new\\src\\presentation\\components\\wrapper\\drawer\\DrawerListItems.tsx":"85","D:\\React\\dashboard-new\\src\\presentation\\components\\groupdetails\\GroupBanner.tsx":"86","D:\\React\\dashboard-new\\src\\presentation\\components\\groupdetails\\GroupMembers.tsx":"87","D:\\React\\dashboard-new\\src\\presentation\\components\\groupdetails\\GroupPerfomance.tsx":"88","D:\\React\\dashboard-new\\src\\presentation\\actions\\auth_actions.ts":"89","D:\\React\\dashboard-new\\src\\presentation\\reducers\\app\\auth\\auth_reducer.ts":"90","D:\\React\\dashboard-new\\src\\presentation\\reducers\\app\\auth\\auth_states.ts":"91","D:\\React\\dashboard-new\\src\\domain\\gateway\\IInvitationRepository.ts":"92","D:\\React\\dashboard-new\\src\\infrastructure\\repository\\InvitationRepository.ts":"93","D:\\React\\dashboard-new\\src\\domain\\entity\\UserActiveStatus.ts":"94","D:\\React\\dashboard-new\\src\\infrastructure\\model\\InvitationModel.ts":"95","D:\\React\\dashboard-new\\src\\domain\\entity\\Invitation.ts":"96","D:\\React\\dashboard-new\\src\\presentation\\reducers\\invitations\\invitations_reducer.ts":"97","D:\\React\\dashboard-new\\src\\presentation\\reducers\\invitations\\invitations_states.ts":"98","D:\\React\\dashboard-new\\src\\presentation\\actions\\invitations_actions.ts":"99","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\invites\\InvitesList.tsx":"100","D:\\React\\dashboard-new\\src\\presentation\\components\\app\\loader\\Spinner.tsx":"101","D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\InviteAgentDialog.tsx":"102","D:\\React\\dashboard-new\\src\\presentation\\components\\invites\\InviteListItem.tsx":"103","D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\AgentStatusBadge.tsx":"104","D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\AgentRoleItem.tsx":"105","D:\\React\\dashboard-new\\src\\presentation\\reducers\\groups\\groups_reducers.ts":"106","D:\\React\\dashboard-new\\src\\presentation\\reducers\\groups\\groups_states.ts":"107","D:\\React\\dashboard-new\\src\\presentation\\actions\\groups_actions.ts":"108","D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentGroups.tsx":"109","D:\\React\\dashboard-new\\src\\presentation\\components\\groups\\ListOfGroupsPopUpMenu.tsx":"110","D:\\React\\dashboard-new\\src\\presentation\\pages\\Join.tsx":"111","D:\\React\\dashboard-new\\src\\presentation\\actions\\join_actions.ts":"112","D:\\React\\dashboard-new\\src\\presentation\\reducers\\join\\join_reducer.ts":"113","D:\\React\\dashboard-new\\src\\presentation\\reducers\\join\\join_states.ts":"114","D:\\React\\dashboard-new\\src\\presentation\\components\\groups\\FlexItemGroup.tsx":"115"},{"size":565,"mtime":1626436007030,"results":"116","hashOfConfig":"117"},{"size":361,"mtime":1625510978560,"results":"118","hashOfConfig":"117"},{"size":1354,"mtime":1625700616517,"results":"119","hashOfConfig":"117"},{"size":1226,"mtime":1627935073282,"results":"120","hashOfConfig":"117"},{"size":743,"mtime":1627768103939,"results":"121","hashOfConfig":"117"},{"size":1681,"mtime":1627764630272,"results":"122","hashOfConfig":"117"},{"size":329,"mtime":1627759078125,"results":"123","hashOfConfig":"117"},{"size":487,"mtime":1626446156606,"results":"124","hashOfConfig":"117"},{"size":2132,"mtime":1626456972535,"results":"125","hashOfConfig":"117"},{"size":2263,"mtime":1627929470130,"results":"126","hashOfConfig":"117"},{"size":1315,"mtime":1625510978539,"results":"127","hashOfConfig":"117"},{"size":161,"mtime":1625510978548,"results":"128","hashOfConfig":"117"},{"size":1701,"mtime":1627932216308,"results":"129","hashOfConfig":"117"},{"size":631,"mtime":1627931447981,"results":"130","hashOfConfig":"117"},{"size":717,"mtime":1625700610116,"results":"131","hashOfConfig":"117"},{"size":1337,"mtime":1627929769721,"results":"132","hashOfConfig":"117"},{"size":114,"mtime":1625510978546,"results":"133","hashOfConfig":"117"},{"size":2114,"mtime":1626457485156,"results":"134","hashOfConfig":"117"},{"size":3282,"mtime":1625700610113,"results":"135","hashOfConfig":"117"},{"size":741,"mtime":1625700610108,"results":"136","hashOfConfig":"117"},{"size":495,"mtime":1627930848869,"results":"137","hashOfConfig":"117"},{"size":277,"mtime":1625510978552,"results":"138","hashOfConfig":"117"},{"size":638,"mtime":1625700616703,"results":"139","hashOfConfig":"117"},{"size":660,"mtime":1626456590710,"results":"140","hashOfConfig":"117"},{"size":2341,"mtime":1626456590709,"results":"141","hashOfConfig":"117"},{"size":41,"mtime":1625510978549,"results":"142","hashOfConfig":"117"},{"size":344,"mtime":1626210312112,"results":"143","hashOfConfig":"117"},{"size":201,"mtime":1625510978544,"results":"144","hashOfConfig":"117"},{"size":202,"mtime":1625510978547,"results":"145","hashOfConfig":"117"},{"size":260,"mtime":1625700610126,"results":"146","hashOfConfig":"117"},{"size":169,"mtime":1625700610125,"results":"147","hashOfConfig":"117"},{"size":2928,"mtime":1624295352006,"results":"148","hashOfConfig":"117"},{"size":297,"mtime":1626442299923,"results":"149","hashOfConfig":"117"},{"size":998,"mtime":1625700610123,"results":"150","hashOfConfig":"117"},{"size":477,"mtime":1625700610118,"results":"151","hashOfConfig":"117"},{"size":744,"mtime":1625700610116,"results":"152","hashOfConfig":"117"},{"size":1494,"mtime":1626442299931,"results":"153","hashOfConfig":"117"},{"size":765,"mtime":1625700610124,"results":"154","hashOfConfig":"117"},{"size":582,"mtime":1625700610121,"results":"155","hashOfConfig":"117"},{"size":1295,"mtime":1625700610122,"results":"156","hashOfConfig":"117"},{"size":785,"mtime":1626442299925,"results":"157","hashOfConfig":"117"},{"size":496,"mtime":1626442299926,"results":"158","hashOfConfig":"117"},{"size":858,"mtime":1625700610124,"results":"159","hashOfConfig":"117"},{"size":94,"mtime":1625510978546,"results":"160","hashOfConfig":"117"},{"size":975,"mtime":1626446156649,"results":"161","hashOfConfig":"117"},{"size":74,"mtime":1623156406347,"results":"162","hashOfConfig":"117"},{"size":733,"mtime":1626452080877,"results":"163","hashOfConfig":"117"},{"size":1516,"mtime":1627472505812,"results":"164","hashOfConfig":"117"},{"size":5068,"mtime":1627756287132,"results":"165","hashOfConfig":"117"},{"size":280,"mtime":1626456972538,"results":"166","hashOfConfig":"117"},{"size":768,"mtime":1626442299925,"results":"167","hashOfConfig":"117"},{"size":862,"mtime":1626456972540,"results":"168","hashOfConfig":"117"},{"size":540,"mtime":1626456972539,"results":"169","hashOfConfig":"117"},{"size":172,"mtime":1626210312113,"results":"170","hashOfConfig":"117"},{"size":86,"mtime":1626456972537,"results":"171","hashOfConfig":"117"},{"size":1148,"mtime":1626446329569,"results":"172","hashOfConfig":"117"},{"size":414,"mtime":1626442299922,"results":"173","hashOfConfig":"117"},{"size":1614,"mtime":1626456002873,"results":"174","hashOfConfig":"117"},{"size":161,"mtime":1626442299927,"results":"175","hashOfConfig":"117"},{"size":670,"mtime":1626442299927,"results":"176","hashOfConfig":"117"},{"size":1267,"mtime":1626442299921,"results":"177","hashOfConfig":"117"},{"size":943,"mtime":1626443534427,"results":"178","hashOfConfig":"117"},{"size":4100,"mtime":1626446329582,"results":"179","hashOfConfig":"117"},{"size":4753,"mtime":1626443725928,"results":"180","hashOfConfig":"117"},{"size":540,"mtime":1625510978558,"results":"181","hashOfConfig":"117"},{"size":581,"mtime":1626443534574,"results":"182","hashOfConfig":"117"},{"size":1002,"mtime":1626443725968,"results":"183","hashOfConfig":"117"},{"size":715,"mtime":1627766462670,"results":"184","hashOfConfig":"117"},{"size":573,"mtime":1625510978559,"results":"185","hashOfConfig":"117"},{"size":2790,"mtime":1627684604316,"results":"186","hashOfConfig":"117"},{"size":2279,"mtime":1626723336731,"results":"187","hashOfConfig":"117"},{"size":1493,"mtime":1627723022191,"results":"188","hashOfConfig":"117"},{"size":2008,"mtime":1627469460237,"results":"189","hashOfConfig":"117"},{"size":3435,"mtime":1627726399685,"results":"190","hashOfConfig":"117"},{"size":2081,"mtime":1627932468485,"results":"191","hashOfConfig":"117"},{"size":5334,"mtime":1627474783412,"results":"192","hashOfConfig":"117"},{"size":1921,"mtime":1626215021574,"results":"193","hashOfConfig":"117"},{"size":1548,"mtime":1626525253641,"results":"194","hashOfConfig":"117"},{"size":848,"mtime":1626446156469,"results":"195","hashOfConfig":"117"},{"size":392,"mtime":1625510978557,"results":"196","hashOfConfig":"117"},{"size":2314,"mtime":1626446156516,"results":"197","hashOfConfig":"117"},{"size":3004,"mtime":1627684711031,"results":"198","hashOfConfig":"117"},{"size":6780,"mtime":1627757295780,"results":"199","hashOfConfig":"117"},{"size":2297,"mtime":1627757295743,"results":"200","hashOfConfig":"117"},{"size":2995,"mtime":1627757134798,"results":"201","hashOfConfig":"117"},{"size":1850,"mtime":1623156406379,"results":"202","hashOfConfig":"117"},{"size":3767,"mtime":1627757295843,"results":"203","hashOfConfig":"117"},{"size":1949,"mtime":1623156406385,"results":"204","hashOfConfig":"117"},{"size":782,"mtime":1626446329643,"results":"205","hashOfConfig":"117"},{"size":779,"mtime":1626446329631,"results":"206","hashOfConfig":"117"},{"size":502,"mtime":1626440602117,"results":"207","hashOfConfig":"117"},{"size":623,"mtime":1626456002863,"results":"208","hashOfConfig":"117"},{"size":1945,"mtime":1626456002874,"results":"209","hashOfConfig":"117"},{"size":103,"mtime":1626456002862,"results":"210","hashOfConfig":"117"},{"size":518,"mtime":1626456002863,"results":"211","hashOfConfig":"117"},{"size":1059,"mtime":1626456972536,"results":"212","hashOfConfig":"117"},{"size":1858,"mtime":1627756259084,"results":"213","hashOfConfig":"117"},{"size":1015,"mtime":1627740735247,"results":"214","hashOfConfig":"117"},{"size":839,"mtime":1627740735232,"results":"215","hashOfConfig":"117"},{"size":1026,"mtime":1627756382836,"results":"216","hashOfConfig":"117"},{"size":770,"mtime":1626715781889,"results":"217","hashOfConfig":"117"},{"size":6964,"mtime":1627736758331,"results":"218","hashOfConfig":"117"},{"size":1368,"mtime":1627757295809,"results":"219","hashOfConfig":"117"},{"size":2518,"mtime":1626715781888,"results":"220","hashOfConfig":"117"},{"size":1295,"mtime":1626715781888,"results":"221","hashOfConfig":"117"},{"size":1490,"mtime":1627470463841,"results":"222","hashOfConfig":"117"},{"size":1513,"mtime":1627472035269,"results":"223","hashOfConfig":"117"},{"size":547,"mtime":1627472482472,"results":"224","hashOfConfig":"117"},{"size":1042,"mtime":1627726770487,"results":"225","hashOfConfig":"117"},{"size":870,"mtime":1627728505473,"results":"226","hashOfConfig":"117"},{"size":4308,"mtime":1627936208709,"results":"227","hashOfConfig":"117"},{"size":407,"mtime":1627931608570,"results":"228","hashOfConfig":"117"},{"size":977,"mtime":1627936511614,"results":"229","hashOfConfig":"117"},{"size":227,"mtime":1627934294200,"results":"230","hashOfConfig":"117"},{"size":923,"mtime":1627726770496,"results":"231","hashOfConfig":"117"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"9du7pf",{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"234"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"296"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"234"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"234"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"234"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"234"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"234"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"234"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"234"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"234"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"234"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"234"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"234"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"234"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"234"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"234"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"234"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"234"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"234"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"234"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"D:\\React\\dashboard-new\\src\\index.tsx",[],["486","487"],"D:\\React\\dashboard-new\\src\\presentation\\store\\store.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\theme\\theme.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\App.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\store\\reducers.ts",[],"D:\\React\\dashboard-new\\src\\di\\injection.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\route\\routes.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\ErrorBoundary.tsx",[],"D:\\React\\dashboard-new\\src\\di\\module\\usecases_module.ts",[],"D:\\React\\dashboard-new\\src\\di\\module\\gateways_module.ts",[],"D:\\React\\dashboard-new\\src\\di\\container\\Container.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\IAppCache.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\service\\AuthService.ts",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IAuthService.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\LoginUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\model\\UserModel.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\ParamUseCase.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\User.ts",[],"D:\\React\\dashboard-new\\src\\di\\module\\network_module.ts",[],"D:\\React\\dashboard-new\\src\\di\\module\\cache_module.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\config.js",[],["488","489"],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\IApiExceptionFactory.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\ApiExceptionFactory.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\IApiClinet.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\AxiosApiClient.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\cache_constants.ts",[],"D:\\React\\dashboard-new\\src\\domain\\exception\\Exception.ts",[],"D:\\React\\dashboard-new\\src\\domain\\exception\\UnauthorizedException.ts",["490"],"import { Exception } from \"./Exception\";\r\n\r\nexport default class UnauthorizedException extends Exception {\r\n  constructor(code: number, message: string | undefined) {\r\n    super(code, message);\r\n  }\r\n}","D:\\React\\dashboard-new\\src\\infrastructure\\exception\\ServerException.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\auth\\LoginResponse.ts",["491","492"],"import { BaseResponse } from \"../BaseResponse\";\r\nimport UserModel from \"../../../model/UserModel\";\r\nimport { Expose, Type } from \"class-transformer\";\r\n\r\nexport default class LoginResponse extends BaseResponse<LoginResponseData> {}\r\n\r\nexport class LoginResponseData {\r\n  user!: UserModel;\r\n\r\n  token!: string;\r\n}",["493","494"],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\BaseResponse.ts",["495","496","497","498"],"import { Expose, plainToClass, Transform, Type } from \"class-transformer\";\r\n\r\nexport class BaseResponse<T> {\r\n  metadata: Metadata;\r\n\r\n  data: T;\r\n}\r\n\r\nexport class Metadata {\r\n  status: boolean;\r\n\r\n  statusCode: number;\r\n\r\n  message: string;\r\n}","D:\\React\\dashboard-new\\src\\presentation\\theme\\fonts\\productSansFontProps.ts",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\AxiosApiClientProxy.ts",["499"],"import AxiosApiClient from \"../provider/api/client/AxiosApiClient\";\r\nimport { AxiosInstance, AxiosResponse } from \"axios\";\r\nimport IApiExceptionFactory from \"./exception/IApiExceptionFactory\";\r\nimport { ApiResponse, RequestOptions } from \"../provider/api/client/IApiClinet\";\r\n\r\nexport default class AxiosApiClientProxy extends AxiosApiClient {\r\n  constructor(\r\n    private readonly exceptionFactory: IApiExceptionFactory,\r\n    axios: AxiosInstance\r\n  ) {\r\n    super(axios);\r\n  }\r\n\r\n  protected async tryRequest<T>(\r\n    request: () => Promise<AxiosResponse<T>>\r\n  ): Promise<ApiResponse<T>> {\r\n    const response = await super.tryRequest(request);\r\n\r\n    this.processResponseStatus(response.data);\r\n\r\n    return response;\r\n  }\r\n\r\n  private processResponseStatus(data: any) {\r\n    if (data.metadata) {\r\n      if (!data.metadata.status) {\r\n        throw this.exceptionFactory.createException(\r\n          data.metadata.statusCode,\r\n          data.metadata.message\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\AppCache.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\RegisterUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\LoggingInterceptor.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\ICacheStorage.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\WebLocalStorage.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUserDetailsUseCase.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUsersUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\AuthorizationInterceptor.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\UseCase.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\Dashboard.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\chats\\Chats.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\Workspace.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupsList.tsx",["500","501","502"],"import {\n  List,\n  createStyles,\n  makeStyles,\n  Theme,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport GroupListItem from \"../../../../../components/groups/GroupsListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { groupsSelector } from \"../../../../../reducers/groups/groups_reducers\";\nimport {\n  groupsErrorState,\n  GroupsState,\n} from \"../../../../../reducers/groups/groups_states\";\nimport { Spinner } from \"../../../../../components/app/loader/Spinner\";\nimport { useEffect } from \"react\";\nimport { getGroups } from \"../../../../../actions/groups_actions\";\nimport { toast } from \"react-hot-toast\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    groupsList: {\n      padding: 0,\n    },\n\n    loadingContainer: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  })\n);\n\nexport default function GroupsList() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { isGroupsLoading, groupsError, groups } = useSelector(groupsSelector);\n\n  useEffect(() => {\n    if (groups) return;\n    dispatch(getGroups());\n  }, [groups, dispatch]);\n\n  useEffect(() => {\n    if (groupsError) toast.error(groupsError.message);\n  }, [groupsError]);\n\n  return (\n    <Spinner loading={isGroupsLoading}>\n      <List className={classes.groupsList}>\n        {groups?.map((groupItem) => (\n          <GroupListItem key={groupItem.id} group={groupItem} />\n        ))}\n      </List>\n    </Spinner>\n  );\n}\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentsList.tsx",["503","504","505","506"],"import {\n  List,\n  createStyles,\n  makeStyles,\n  Theme,\n  CircularProgress,\n  Snackbar,\n  Fab,\n  Icon,\n} from \"@material-ui/core\";\n\nimport AgentListItem from \"../../../../../components/agents/AgentListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  clearChangeRoleReducer,\n  usersSelector,\n} from \"../../../../../reducers/users/users_reducer\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  changeSelectedUserRole,\n  getUsers,\n} from \"../../../../../actions/users_actions\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Spinner } from \"../../../../../components/app/loader/Spinner\";\nimport { UserRole } from \"../../../../../../domain/entity/UserRole\";\nimport { Add } from \"@material-ui/icons\";\nimport {\n  InviteAgentDialog,\n  InviteAgentForm,\n} from \"../../../../../components/agents/InviteAgentDialog\";\nimport {\n  fetchInvitations,\n  inviteUser,\n} from \"../../../../../actions/invitations_actions\";\nimport {clearInviteUserState, invitationsSelector} from \"../../../../../reducers/invitations/invitations_reducer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    agentsList: {\n      padding: 0,\n    },\n\n    margin: {\n      width: theme.spacing(19),\n      position: \"absolute\",\n      top: \"100%\",\n      left: \"100%\",\n      transform: \"translate(-120%, -150%)\",\n    },\n\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nexport default function AgentsList() {\n  const classes = useStyles();\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    snackBarMessage: \"\",\n  });\n  const [isInviteDialogOpen, setIsInviteDialogOpen] = useState(false);\n\n  const {\n    isUsersLoading,\n    users,\n    UsersError,\n    changeRoleSuccess,\n    changeRoleError,\n  } = useSelector(usersSelector);\n\n  const dispatch = useDispatch();\n\n  //...................User dispatch and side effects............................\n\n  useEffect(() => {\n    if (users) return;\n    dispatch(getUsers());\n  }, [users, dispatch]);\n\n  useEffect(() => {\n    if (UsersError) {\n      toast.error(UsersError.message);\n    }\n  }, [UsersError]);\n\n  //..................Change Role State and side effects .....................\n\n  useEffect(() => {\n    if (changeRoleSuccess) {\n      setSnackbarState({\n        open: true,\n        snackBarMessage:\n          changeRoleSuccess.name + \"role has been changed successfully.\",\n      });\n    } else if (changeRoleError) {\n      setSnackbarState({\n        open: true,\n        snackBarMessage: \"Something went wrong. Role has not changed.\",\n      });\n    }\n    return () => {\n      dispatch(clearChangeRoleReducer());\n    };\n  }, [dispatch, changeRoleSuccess, changeRoleError]);\n\n  //......................event handlers.....................................\n\n  const handleOnRoleChanged = (id: string, role: UserRole) => {\n    dispatch(changeSelectedUserRole({ userId: id, newRole: role }));\n  };\n\n  const handleOnDeleteUser = (id: string) => {};\n\n  const handleOnInviteAgentFormSubmission = (\n    inviteForm: InviteAgentForm | null\n  ) => {\n    setIsInviteDialogOpen(false);\n\n    //if actually submitted, not dismissed.\n    if (inviteForm) {\n      dispatch(inviteUser(inviteForm));\n    }\n  };\n\n  const { inviteResults, invitationErrors } = useSelector(invitationsSelector);\n\n  useEffect(() => {\n    if (inviteResults) {\n      setSnackbarState({\n        open: true,\n        snackBarMessage: \"Invitation sent successfully.\",\n      });\n\n      dispatch(fetchInvitations());\n\n    } else if (invitationErrors) {\n      setSnackbarState({\n        open: true,\n        snackBarMessage: \"Something went wrong, Error sending invitation.\",\n      });\n    }\n\n    return () => {\n      dispatch(clearInviteUserState());\n    };\n  }, [inviteResults, invitationErrors]);\n\n  const AgentsList = () => {\n    return (\n      <List className={classes.agentsList}>\n        {users &&\n          users.map((agentItem) => (\n            <AgentListItem\n              key={agentItem.id}\n              agent={agentItem}\n              onRoleChanged={handleOnRoleChanged}\n              onDelete={handleOnDeleteUser}\n            />\n          ))}\n      </List>\n    );\n  };\n\n  const AgentsSnackbar = () => {\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={snackbarState.open}\n        autoHideDuration={3000}\n        message={snackbarState.snackBarMessage}\n      />\n    );\n  };\n\n  const InviteAgentsFab = () => {\n    return (\n      <Fab\n        variant=\"extended\"\n        color=\"primary\"\n        aria-label=\"add\"\n        className={classes.margin}\n        onClick={() => setIsInviteDialogOpen(true)}\n      >\n        <Add className={classes.extendedIcon} />\n        Invite Agents\n      </Fab>\n    );\n  };\n\n  return (\n    <Spinner loading={isUsersLoading}>\n      <AgentsList />\n      <AgentsSnackbar />\n      <InviteAgentsFab />\n      <InviteAgentDialog\n        open={isInviteDialogOpen}\n        handleOnSubmission={handleOnInviteAgentFormSubmission}\n      />\n    </Spinner>\n  );\n}\n","D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRoleRepository.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\DeleteUserUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRoleRepository.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\userrole\\GetUserRolesUseCase.ts",[],"D:\\React\\dashboard-new\\src\\domain\\exception\\UnknownException.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\UserRole.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\route\\AuthenticatedRoute.tsx",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IGroupRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\repository\\GroupRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\model\\Mapper.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\model\\GroupModel.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\Group.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\login\\login_reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\Login.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\Register.tsx",["507","508"],"import {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Button,\n  createStyles,\n  Theme,\n  Card,\n  CircularProgress,\n  TextField,\n  Box,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast, Toaster } from \"react-hot-toast\";\nimport { clearState, registerSelector } from \"../reducers/register/register_reducer\";\nimport { register } from \"../actions/register_actions\";\nimport { Routes } from \"../route/routes\";\n\nconst styles = makeStyles((theme: Theme) =>\n  createStyles({\n    card__register: {\n      borderRadius: theme.spacing(1),\n    },\n\n    form__register: {\n      marginTop: theme.spacing(5),\n      marginBottom: theme.spacing(5),\n      \"& .MuiTextField-root\": {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n      },\n    },\n  })\n);\n\nconst Register = () => {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { isLoading, success, error } = useSelector(registerSelector);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    dispatch(\n      register({\n        email,\n        password,\n        fullName,\n        companyName,\n        phoneNumber,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error.message);\n    }\n\n    if (success) {\n      history.replace(Routes.DASHBOARD);\n    }\n\n    return () => {\n      dispatch(clearState());\n    };\n  }, [dispatch, error, success]);\n\n  const classes = styles();\n\n  return (\n    <div>\n      <Toaster />\n      <AppBar position=\"fixed\" variant=\"outlined\">\n        <Toolbar>\n          <Box flexGrow={1}>\n            <Typography variant=\"h6\">Register a company</Typography>\n          </Box>\n          <Button\n            variant=\"text\"\n            color=\"inherit\"\n            component={Link}\n            to={Routes.LOGIN}\n          >\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100vh\"\n      >\n        <Card className={classes.card__register} variant=\"outlined\">\n          {isLoading && <LinearProgress />}\n          <Box\n            p={6}\n            display=\"flex\"\n            flexDirection=\"column\"\n            width={450}\n            minHeight={550}\n          >\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography variant=\"h5\">Register Your Company</Typography>\n            </Box>\n            <Box flex={1}>\n              <form className={classes.form__register}>\n                <Box display=\"flex\" flexDirection=\"column\">\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Business Email\"\n                    onChange={(event) => {\n                      setEmail(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Workspace Name\"\n                    onChange={(event) => {\n                      setCompanyName(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(event) => {\n                      setPassword(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    onChange={(event) => {\n                      setPhoneNumber(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Full Name\"\n                    onChange={(event) => {\n                      setFullName(event.target.value);\n                    }}\n                  />\n                </Box>\n              </form>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Button variant=\"text\" component={Link} to={Routes.LOGIN}>\n                Sign in instead\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                Next\n              </Button>\n            </Box>\n          </Box>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nexport default Register;\n","D:\\React\\dashboard-new\\src\\presentation\\reducers\\login\\login_states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\actions\\login_actions.ts",["509"],"import { setLoading, setLoginSuccess, setLoginFailed } from \"../reducers/login/login_reducer\";\r\nimport { resolve } from \"../../di/injection\";\r\nimport LoginUseCase from \"../../domain/interactor/auth/LoginUseCase\";\r\n\r\nexport const login =\r\n  (email: string, password: string) => async (dispatch: any) => {\r\n    dispatch(setLoading(true));\r\n\r\n    const useCase = resolve<LoginUseCase>(LoginUseCase);\r\n\r\n    try {\r\n      const result = await useCase.execute({ email, password });\r\n      dispatch(setLoginSuccess());\r\n    } catch (e) {\r\n      dispatch(setLoginFailed(e));\r\n    }\r\n  };\r\n","D:\\React\\dashboard-new\\src\\presentation\\reducers\\register\\register_reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\actions\\register_actions.ts",["510"],"import { setLoading, setRegisterFailed, setRegisterSuccess } from \"../reducers/register/register_reducer\";\nimport RegisterUseCase from \"../../domain/interactor/auth/RegisterUseCase\";\nimport { resolve } from \"../../di/injection\";\n\nexport type RegisterParams = {\n  email: string;\n  password: string;\n  fullName: string;\n  companyName: string;\n  phoneNumber: string;\n};\n\nexport const register = (params: RegisterParams) => async (dispatch: any) => {\n  dispatch(setLoading(true));\n\n  const registerUseCase = resolve<RegisterUseCase>(RegisterUseCase);\n\n  try {\n    const { success } = await registerUseCase.execute(params);\n\n    dispatch(setRegisterSuccess());\n  } catch (e) {\n    dispatch(setRegisterFailed(e));\n  }\n};\n","D:\\React\\dashboard-new\\src\\presentation\\reducers\\register\\register_states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceInfoSection.tsx",["511","512"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Typography } from \"@material-ui/core\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n  Redirect,\n  useLocation,\n} from \"react-router-dom\";\nimport AgentDetails from \"./agents/AgentDetails\";\nimport GroupDetails from \"./groups/GroupDetails\";\nimport qs from \"qs\";\nimport { Routes } from \"../../../../route/routes\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  infoTopBar: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: theme.spacing(6) + 2,\n  },\n\n  infoTopBarText: {\n    fontWeight: 500,\n  },\n\n  infoSectionContent: {\n    maxHeight: `calc(100vh - ${theme.spacing(12)}px)`,\n    overflow: \"auto\",\n  },\n\n  infoSection: {\n    position: \"relative\",\n    width: \"40%\",\n    minWidth: 640,\n  },\n}));\n\ninterface SelectedAgentQP {\n  agentId: number;\n}\n\ninterface SelectedGroupQP {\n  groupId: number;\n}\n\nconst WorkspaceInfoSection = () => {\n  const classes = useStyles();\n\n  const { path } = useRouteMatch();\n\n  const location = useLocation();\n\n  const { agentId: selectedAgentId } = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n  const { groupId: selectedGroupId } = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n\n  return (\n    <div className={classes.infoSection}>\n      <AppBar\n        position=\"static\"\n        variant=\"outlined\"\n        color=\"transparent\"\n        className={classes.infoTopBar}\n      >\n        <Typography className={classes.infoTopBarText}>\n          {location.pathname.includes(Routes.AGENTS)\n            ? \"Agent Info\"\n            : location.pathname.includes(Routes.GROUPS)\n            ? \"Group Info\"\n            : null}\n        </Typography>\n      </AppBar>\n      <div className={classes.infoSectionContent}>\n        <Switch>\n          <Route exact path={path}>\n            <Redirect to={path + Routes.AGENTS} />\n          </Route>\n          <Route\n            path={path + Routes.AGENTS}\n            component={\n              selectedAgentId === undefined\n                ? () => <></>\n                : () => (\n                    <AgentDetails\n                      selectedAgentId={selectedAgentId.toString()}\n                    />\n                  )\n            }\n          />\n          <Route path={path + Routes.INVITES} render={() => <></>} />\n          <Route\n            path={path + Routes.GROUPS}\n            component={\n              selectedGroupId === undefined\n                ? () => <></>\n                : () => (\n                    <GroupDetails\n                      selectedGroupId={selectedGroupId.toString()}\n                    />\n                  )\n            }\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkspaceInfoSection;\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceListSection.tsx",["513"],"import React from \"react\";\r\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport AgentsList from \"./agents/AgentsList\";\r\nimport GroupsList from \"./groups/GroupsList\";\r\nimport Invites from \"./invites/InvitesList\";\r\nimport {Routes} from \"../../../../route/routes\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tabBar: {\r\n    // width: \"60%\",\r\n  },\r\n\r\n  listSection: {\r\n    position: \"relative\",\r\n    width: \"60%\",\r\n  },\r\n\r\n  listSectionContent: {\r\n    maxHeight: `calc(100vh - ${theme.spacing(12)}px)`,\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst WorkspaceListSection = () => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  let { path } = useRouteMatch();\r\n\r\n  let initialIndex =\r\n    location.pathname === path + Routes.AGENTS\r\n      ? 0\r\n      : location.pathname === path + Routes.INVITES\r\n      ? 1\r\n      : location.pathname === path + Routes.GROUPS\r\n      ? 2\r\n      : 0;\r\n\r\n  const [tabIndex, setTabIndex] = React.useState(initialIndex);\r\n\r\n  return (\r\n    <div className={classes.listSection}>\r\n      <AppBar position=\"static\" variant=\"outlined\" className={classes.tabBar}>\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={(e, v) => {\r\n            setTabIndex(v);\r\n          }}\r\n        >\r\n          <Tab label=\"Agents\" component={Link} to={path + Routes.AGENTS} />\r\n          <Tab label=\"Invites\" component={Link} to={path + Routes.INVITES} />\r\n          <Tab label=\"Groups\" component={Link} to={path + Routes.GROUPS} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className={classes.listSectionContent}>\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <Redirect to={path + Routes.AGENTS} />\r\n          </Route>\r\n          <Route path={path + Routes.AGENTS} component={AgentsList} />\r\n          <Route path={path + Routes.INVITES} component={Invites} />\r\n          <Route path={path + Routes.GROUPS} component={GroupsList} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkspaceListSection;\r\n","D:\\React\\dashboard-new\\src\\presentation\\actions\\users_actions.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\users\\users_reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentDetails.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\users\\users_states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentBanner.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentPerformance.tsx",["514","515"],"import { Typography, Box, Card, Theme, makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  detailItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n\r\n  detailItemText: {\r\n    fontWeight: 400,\r\n  },\r\n}));\r\n\r\nexport interface Group {\r\n  name: String;\r\n}\r\n\r\nexport interface AgentPerformanceProps {\r\n  totalChatAccepted: number;\r\n  chatSatisfaction: String;\r\n}\r\n\r\nconst AgentPerformance: FC<AgentPerformanceProps> = (\r\n  props: AgentPerformanceProps\r\n) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Performance</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Total chats accepted\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.totalChatAccepted}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Chat satisfactions\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.chatSatisfaction}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentPerformance;\r\n","D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentAdditionalInfo.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\app\\loader\\TicketLoading.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\app\\error\\Error.tsx",["516"],"import { FunctionComponent } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\n\r\nexport type ErrorProps = {\r\n  title?: string;\r\n  message?: string;\r\n  onBack?: () => void;\r\n  closable?: boolean;\r\n};\r\n\r\nexport const ErrorWrapper: FunctionComponent<ErrorProps> = ({\r\n  title,\r\n  message,\r\n  closable,\r\n  onBack,\r\n}) => {\r\n  // TODO: Show Modal here\r\n  return <h1>Error here</h1>;\r\n};\r\n","D:\\React\\dashboard-new\\src\\presentation\\components\\wrapper\\DashboardDrawerAndAppBar.tsx",["517","518","519","520","521","522"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DrawerListItems from \"./drawer/DrawerListItems\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      width: theme.spacing(8) + 1,\r\n      \"& .MuiPaper-root\": {\r\n        width: theme.spacing(8) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      minHeight: theme.spacing(6),\r\n    },\r\n    drawerItem: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      borderRadius: theme.spacing(4),\r\n      margin: theme.spacing(1),\r\n      justifyContent: \"center\",\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        minWidth: theme.spacing(3),\r\n      },\r\n    },\r\n\r\n    selectedDrawerItem: {\r\n      borderRadius: theme.spacing(3),\r\n    },\r\n\r\n    main: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\ntype DashboardDrawerAndAppBarProps = {};\r\n\r\nconst DashboardDrawerAndAppBar: React.FC<DashboardDrawerAndAppBarProps> = ({\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={classes.appBar}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" noWrap>\r\n            Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer variant=\"permanent\" className={classes.drawer}>\r\n        <div className={classes.toolbar} />\r\n        <DrawerListItems />\r\n      </Drawer>\r\n      <div className={classes.main}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardDrawerAndAppBar;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupDetails.tsx",["523","524","525"],"import {\n  CircularProgress,\n  Card,\n  makeStyles,\n  Theme,\n  Avatar,\n  Divider,\n} from \"@material-ui/core\";\nimport { FC, useEffect } from \"react\";\nimport GroupBanner from \"../../../../../components/groupdetails/GroupBanner\";\nimport GroupMembers from \"../../../../../components/groupdetails/GroupMembers\";\nimport GroupPerformance from \"../../../../../components/groupdetails/GroupPerfomance\";\nimport { IGroup } from \"../../../../../../domain/entity/Group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { groupsSelector } from \"../../../../../reducers/groups/groups_reducers\";\nimport { getSelectedGroup } from \"../../../../../actions/groups_actions\";\nimport { Spinner } from \"../../../../../components/app/loader/Spinner\";\nimport { toast } from \"react-hot-toast\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  loadingContainer: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  card: {\n    width: \"90%\",\n    height: \"auto\",\n    margin: `${theme.spacing(8)}px auto`,\n    background: theme.palette.secondary.main,\n  },\n  avatar: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    fontSize: 48,\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  banner: {\n    margin: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: theme.spacing(6),\n  },\n  nameArea: {\n    marginLeft: theme.spacing(4),\n    marginRight: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  roleText: {\n    fontWeight: 500,\n    padding: theme.spacing(1),\n  },\n  role: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nexport interface GroupDetailsProps {\n  selectedGroupId: string;\n}\n\nconst GroupDetails: FC<GroupDetailsProps> = ({ selectedGroupId }: GroupDetailsProps) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const { isSelectedGroupLoading, selectedGroup, selectedGroupError } =\n    useSelector(groupsSelector);\n\n  useEffect(() => {\n    dispatch(getSelectedGroup(selectedGroupId));\n  }, [selectedGroupId, dispatch]);\n\n  useEffect(() => {\n    if (selectedGroupError) toast.error(selectedGroupError.message);\n  }, [selectedGroupError]);\n\n  return (\n    <Spinner loading={isSelectedGroupLoading}>\n      {selectedGroup && (\n        <Card variant=\"outlined\" className={classes.card}>\n          <div className={classes.cardContent}>\n            <GroupBanner groupName={selectedGroup.name} />\n            <Divider />\n            <GroupMembers users={selectedGroup.members} />\n            <Divider />\n            <GroupPerformance\n              totalChatAccepted={64}\n              chatSatisfaction={\"3/10\"}\n            />\n          </div>\n        </Card>\n      )}\n    </Spinner>\n  );\n};\n\nexport default GroupDetails;\n","D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\AgentListItem.tsx",["526","527","528","529","530","531","532"],"import React, { FC, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Box,\r\n  createStyles,\r\n  Dialog,\r\n  DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport { MoreHoriz, Star, VerifiedUser } from \"@material-ui/icons\";\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\nimport { Routes } from \"../../route/routes\";\r\nimport { UserActiveStatus } from \"../../../domain/entity/UserActiveStatus\";\r\nimport { UserRole } from \"../../../domain/entity/UserRole\";\r\nimport {\r\n  bindMenu,\r\n  bindTrigger,\r\n  usePopupState,\r\n} from \"material-ui-popup-state/hooks\";\r\nimport { PopupState } from \"material-ui-popup-state/core\";\r\nimport { IUser } from \"../../../domain/entity/User\";\r\nimport { AgentRoleItem } from \"./AgentRoleItem\";\r\nimport { AgentStatusBadge } from \"./AgentStatusBadge\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    listItemIcon: {\r\n      width: theme.spacing(8),\r\n    },\r\n\r\n    avatar: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      color: theme.palette.secondary.contrastText,\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    listItemText: {\r\n      \"& .MuiTypography-body1\": {\r\n        fontWeight: 500,\r\n      },\r\n    },\r\n\r\n    roleText: {\r\n      fontWeight: 500,\r\n      padding: theme.spacing(1),\r\n    },\r\n\r\n    listItemButton: {\r\n      height: theme.spacing(8),\r\n      \"&.MuiListItem-root.Mui-selected, .MuiListItem-root.Mui-selected:hover\": {\r\n        backgroundColor: theme.palette.secondary.main,\r\n      }\r\n    },\r\n\r\n    busyBadge: {\r\n      backgroundColor: \"#D93131\",\r\n      color: \"#D93131\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n\r\n    popUpListItemWarning: {\r\n      color: theme.palette.error.dark,\r\n    },\r\n  })\r\n);\r\n\r\nexport interface AgentListItemProps {\r\n  agent: IUser;\r\n  onRoleChanged: (id: string, role: UserRole) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nexport interface QueryParams {\r\n  agentId: number;\r\n}\r\n\r\nconst AgentListItem: FC<AgentListItemProps> = (props: AgentListItemProps) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { path } = useRouteMatch();\r\n  const location = useLocation();\r\n\r\n  const { id, name, role, userStatus, email } = props.agent;\r\n\r\n  const avatar = <Avatar className={classes.avatar}>{name[0].toUpperCase()}</Avatar>;\r\n\r\n  const { agentId: agentIdFromQueryParams } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  const popUpState = usePopupState({\r\n    variant: \"popper\",\r\n    popupId: \"AGENT_LIST_ITEM_POPUP\",\r\n  });\r\n\r\n  const handleOnRoleChanged = (role: UserRole) => {\r\n    props.onRoleChanged(props.agent.id, role);\r\n  }\r\n\r\n  const handleOnDelete = () => {\r\n    props.onDelete(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        className={classes.listItemButton}\r\n        component={Link}\r\n        selected={agentIdFromQueryParams === id}\r\n        to={path + Routes.PARAM_AGENT_ID + \"=\" + id}\r\n      >\r\n        <AgentStatusBadge status={userStatus}>{avatar}</AgentStatusBadge>\r\n        <ListItemText\r\n          className={classes.listItemText}\r\n          primary={name}\r\n          secondary={email}\r\n        />\r\n        <AgentRoleItem role={role} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"options\"\r\n            {...bindTrigger(popUpState)}\r\n          >\r\n            <MoreHoriz />\r\n          </IconButton>\r\n          <AgentOptionsMenu\r\n            popupState={popUpState}\r\n            selectedAgent={props.agent}\r\n            onRoleSelected={handleOnRoleChanged}\r\n            onDelete={handleOnDelete}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\ntype AgentOptionsMenuProps = {\r\n  popupState: PopupState;\r\n  selectedAgent: IUser;\r\n  onRoleSelected: (role: UserRole) => void;\r\n  onDelete: () => void;\r\n};\r\n\r\nconst AgentOptionsMenu: FC<AgentOptionsMenuProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const handleOnChangeRoleClick = () => {\r\n    setChangeRoleDialogOpen(true); //opens change role dialog\r\n    props.popupState.close(); //closes menu\r\n  };\r\n\r\n  const handleOnDeleteClick = () => {\r\n    props.popupState.close(); //closes menu\r\n    props.onDelete(); //callback\r\n  };\r\n\r\n  const handleOnRoleSelected = (role: UserRole | null) => {\r\n    setChangeRoleDialogOpen(false);\r\n    //if a role has actually been selected from list (not dismissed by clicking away from the dialog for example).\r\n    if (role) {\r\n      props.onRoleSelected(role);\r\n    }\r\n  };\r\n\r\n  // Change Role Dialog State\r\n  const [isChangeRoleDialogOpen, setChangeRoleDialogOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Menu {...bindMenu(props.popupState)}>\r\n        <MenuItem onClick={handleOnChangeRoleClick}>Change Role</MenuItem>\r\n        <MenuItem\r\n          onClick={handleOnDeleteClick}\r\n          className={classes.popUpListItemWarning}\r\n        >\r\n          Remove Agent\r\n        </MenuItem>\r\n      </Menu>\r\n      <ChangeRoleDialog\r\n        open={isChangeRoleDialogOpen}\r\n        selectedAgent={props.selectedAgent}\r\n        onRoleSelected={handleOnRoleSelected}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\ntype ChangeRoleDialogProps = {\r\n  open: boolean;\r\n  selectedAgent: IUser;\r\n  onRoleSelected: (selectedRole: UserRole | null) => void;\r\n};\r\n\r\nconst ChangeRoleDialog: FC<ChangeRoleDialogProps> = (props) => {\r\n  const handleUserRoleItemClicked = (role: UserRole | null) => {\r\n    props.onRoleSelected(role);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={() => handleUserRoleItemClicked(null)}\r\n      aria-labelledby=\"change-role-dialog\"\r\n      open={props.open}\r\n    >\r\n      <DialogTitle id=\"change-role-dialog\">\r\n        Change Role for: {props.selectedAgent.name}\r\n      </DialogTitle>\r\n      <List>\r\n        <ListItem\r\n          selected={props.selectedAgent.role === UserRole.ADMIN}\r\n          button\r\n          onClick={() => handleUserRoleItemClicked(UserRole.ADMIN)}\r\n          key={UserRole.ADMIN}\r\n        >\r\n          <ListItemIcon>\r\n            <VerifiedUser />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Admin\"} />\r\n        </ListItem>\r\n        <ListItem\r\n          selected={props.selectedAgent.role === UserRole.AGENT}\r\n          button\r\n          onClick={() => handleUserRoleItemClicked(UserRole.AGENT)}\r\n          key={UserRole.AGENT}\r\n        >\r\n          <ListItemIcon />\r\n          <ListItemText primary={\"Agent\"} />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default AgentListItem;\r\n","D:\\React\\dashboard-new\\src\\presentation\\components\\groups\\GroupsListItem.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\wrapper\\drawer\\DrawerListItems.tsx",["533"],"import ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Chat, SupervisorAccount } from \"@material-ui/icons\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport { useState } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useRouteMatch, Link, useLocation } from \"react-router-dom\";\r\nimport {Routes} from \"../../../route/routes\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawerItem: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      borderRadius: theme.spacing(4),\r\n      margin: theme.spacing(1),\r\n      justifyContent: \"center\",\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        minWidth: theme.spacing(3),\r\n      },\r\n    },\r\n\r\n    selectedDrawerItem: {\r\n      border: 0,\r\n      borderRadius: theme.spacing(3),\r\n      \"&.MuiToggleButton-root.Mui-selected\": {\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n    },\r\n\r\n    IconSelected: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  })\r\n);\r\n\r\nconst DrawerListItems = () => {\r\n  const classes = useStyles();\r\n\r\n  // The Path object has the route when the component has been initially rendered.\r\n  let { path } = useRouteMatch();\r\n  // The location object automatically gets updated by the router when the route is changed.\r\n  // and thus, I'm using it for syncronizing the selection of the drawer icons with the current selected route.\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        alignItems=\"center\"\r\n        className={classes.drawerItem}\r\n        component={Link}\r\n        to={path + Routes.CHATS}\r\n      >\r\n        <ToggleButton\r\n          selected={location.pathname.includes(path + Routes.CHATS)}\r\n          className={classes.selectedDrawerItem}\r\n        >\r\n          <ListItemIcon>\r\n            <Chat\r\n              className={\r\n                  location.pathname.includes(path + Routes.CHATS)\r\n                  ? classes.IconSelected\r\n                  : undefined\r\n              }\r\n            />\r\n          </ListItemIcon>\r\n        </ToggleButton>\r\n      </ListItem>\r\n\r\n      <ListItem\r\n        alignItems=\"center\"\r\n        className={classes.drawerItem}\r\n        component={Link}\r\n        to={path + Routes.WORKSPACE}\r\n      >\r\n        <ToggleButton\r\n          className={classes.selectedDrawerItem}\r\n          selected={location.pathname.includes(path + Routes.WORKSPACE)}\r\n        >\r\n          <ListItemIcon>\r\n            <SupervisorAccount\r\n              className={\r\n                location.pathname.includes(path + Routes.WORKSPACE)\r\n                  ? classes.IconSelected\r\n                  : undefined\r\n              }\r\n            />\r\n          </ListItemIcon>\r\n        </ToggleButton>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default DrawerListItems;\r\n","D:\\React\\dashboard-new\\src\\presentation\\components\\groupdetails\\GroupBanner.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\groupdetails\\GroupMembers.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\groupdetails\\GroupPerfomance.tsx",["534","535"],"import { Typography, Box, Card, Theme, makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  detailItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n\r\n  detailItemText: {\r\n    fontWeight: 400,\r\n  },\r\n}));\r\n\r\nexport interface Group {\r\n  name: String;\r\n}\r\n\r\nexport interface GroupPerformanceProps {\r\n  totalChatAccepted: number;\r\n  chatSatisfaction: String;\r\n}\r\n\r\nconst GroupPerformance: FC<GroupPerformanceProps> = (\r\n  props: GroupPerformanceProps\r\n) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Performance</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Total chats accepted (Last 7 days)\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.totalChatAccepted}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Chat satisfactions (Last 7 days)\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.chatSatisfaction}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupPerformance;\r\n","D:\\React\\dashboard-new\\src\\presentation\\actions\\auth_actions.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\app\\auth\\auth_reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\app\\auth\\auth_states.ts",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IInvitationRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\repository\\InvitationRepository.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\UserActiveStatus.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\model\\InvitationModel.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\Invitation.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\invitations\\invitations_reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\invitations\\invitations_states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\actions\\invitations_actions.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\invites\\InvitesList.tsx",["536"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchInvitations } from \"../../../../../actions/invitations_actions\";\nimport { Spinner } from \"../../../../../components/app/loader/Spinner\";\nimport { invitationsSelector } from \"../../../../../reducers/invitations/invitations_reducer\";\nimport InviteListItem from \"../../../../../components/invites/InviteListItem\";\nimport { Divider } from \"@material-ui/core\";\n\nconst InvitesList = () => {\n  const dispatch = useDispatch();\n\n  const { isLoading, invitations } = useSelector(invitationsSelector);\n\n  useEffect(() => {\n    if (invitations) return;\n    dispatch(fetchInvitations());\n  }, [dispatch]);\n\n  const invitationsList =\n    invitations?.map((invitation) => {\n      return (\n        <div>\n          <InviteListItem key={invitation.id} invitation={invitation} />\n          <Divider />\n        </div>\n      );\n    }) || [];\n\n  return <Spinner loading={isLoading}>{invitationsList}</Spinner>;\n};\n\nexport default InvitesList;\n","D:\\React\\dashboard-new\\src\\presentation\\components\\app\\loader\\Spinner.tsx",["537","538"],"import { FC, FunctionComponent, PropsWithChildren } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    agentsList: {\r\n      padding: 0,\r\n    },\r\n\r\n    loadingContainer: {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    },\r\n  })\r\n);\r\n\r\nexport type SpinnerProps = {\r\n  loading: boolean;\r\n};\r\n\r\nexport const Spinner: FunctionComponent<SpinnerProps> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return props.loading ? (\r\n    <div className={classes.loadingContainer}>\r\n      <CircularProgress />\r\n    </div>\r\n  ) : (\r\n    <div>{props.children}</div>\r\n  );\r\n};\r\n","D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\InviteAgentDialog.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\invites\\InviteListItem.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\AgentStatusBadge.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\agents\\AgentRoleItem.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\groups\\groups_reducers.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\groups\\groups_states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\actions\\groups_actions.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\agentdetails\\AgentGroups.tsx",["539"],"import { Typography, Box, Card, Theme, makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport {IGroup} from \"../../../domain/entity/Group\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  content: {\r\n    margin: theme.spacing(3),\r\n  },\r\n\r\n  list: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n\r\n  title: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  groupFlexItem: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n    background: theme.palette.primary.main,\r\n    borderWidth: \"1px\",\r\n    border: \"1px solid #707070\",\r\n    borderRadius: theme.spacing(0.5),\r\n    color: theme.palette.primary.contrastText,\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1.5)}px`,\r\n    fontWeight: 500,\r\n  },\r\n}));\r\n\r\nexport interface AgentGroupsProps {\r\n  groups: IGroup[];\r\n}\r\n\r\nconst AgentGroups: FC<AgentGroupsProps> = (props: AgentGroupsProps) => {\r\n  const classes = useStyles();\r\n\r\n  console.log(props.groups);\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Groups</Typography>\r\n      </div>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        className={classes.list}\r\n        flexWrap=\"wrap\"\r\n      >\r\n        {props.groups.map((group) => (\r\n          <Typography className={classes.groupFlexItem}>\r\n            {group.name}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentGroups;\r\n","D:\\React\\dashboard-new\\src\\presentation\\components\\groups\\ListOfGroupsPopUpMenu.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\Join.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\actions\\join_actions.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\join\\join_reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\reducers\\join\\join_states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\groups\\FlexItemGroup.tsx",[],{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"544","severity":1,"message":"545","line":4,"column":3,"nodeType":"546","messageId":"547","endLine":6,"endColumn":4},{"ruleId":"548","severity":1,"message":"549","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":16},{"ruleId":"548","severity":1,"message":"552","line":3,"column":18,"nodeType":"550","messageId":"551","endLine":3,"endColumn":22},{"ruleId":"540","replacedBy":"553"},{"ruleId":"542","replacedBy":"554"},{"ruleId":"548","severity":1,"message":"549","line":1,"column":10,"nodeType":"550","messageId":"551","endLine":1,"endColumn":16},{"ruleId":"548","severity":1,"message":"555","line":1,"column":18,"nodeType":"550","messageId":"551","endLine":1,"endColumn":30},{"ruleId":"548","severity":1,"message":"556","line":1,"column":32,"nodeType":"550","messageId":"551","endLine":1,"endColumn":41},{"ruleId":"548","severity":1,"message":"552","line":1,"column":43,"nodeType":"550","messageId":"551","endLine":1,"endColumn":47},{"ruleId":"548","severity":1,"message":"557","line":4,"column":23,"nodeType":"550","messageId":"551","endLine":4,"endColumn":37},{"ruleId":"548","severity":1,"message":"558","line":6,"column":3,"nodeType":"550","messageId":"551","endLine":6,"endColumn":19},{"ruleId":"548","severity":1,"message":"559","line":13,"column":3,"nodeType":"550","messageId":"551","endLine":13,"endColumn":19},{"ruleId":"548","severity":1,"message":"560","line":14,"column":3,"nodeType":"550","messageId":"551","endLine":14,"endColumn":14},{"ruleId":"548","severity":1,"message":"558","line":6,"column":3,"nodeType":"550","messageId":"551","endLine":6,"endColumn":19},{"ruleId":"548","severity":1,"message":"561","line":9,"column":3,"nodeType":"550","messageId":"551","endLine":9,"endColumn":7},{"ruleId":"548","severity":1,"message":"562","line":24,"column":10,"nodeType":"550","messageId":"551","endLine":24,"endColumn":15},{"ruleId":"563","severity":1,"message":"564","line":149,"column":6,"nodeType":"565","endLine":149,"endColumn":39,"suggestions":"566"},{"ruleId":"548","severity":1,"message":"558","line":10,"column":3,"nodeType":"550","messageId":"551","endLine":10,"endColumn":19},{"ruleId":"563","severity":1,"message":"567","line":77,"column":6,"nodeType":"565","endLine":77,"endColumn":32,"suggestions":"568"},{"ruleId":"548","severity":1,"message":"569","line":12,"column":13,"nodeType":"550","messageId":"551","endLine":12,"endColumn":19},{"ruleId":"548","severity":1,"message":"570","line":19,"column":13,"nodeType":"550","messageId":"551","endLine":19,"endColumn":20},{"ruleId":"548","severity":1,"message":"571","line":39,"column":11,"nodeType":"550","messageId":"551","endLine":39,"endColumn":26},{"ruleId":"548","severity":1,"message":"572","line":43,"column":11,"nodeType":"550","messageId":"551","endLine":43,"endColumn":26},{"ruleId":"548","severity":1,"message":"573","line":2,"column":29,"nodeType":"550","messageId":"551","endLine":2,"endColumn":37},{"ruleId":"548","severity":1,"message":"574","line":1,"column":22,"nodeType":"550","messageId":"551","endLine":1,"endColumn":25},{"ruleId":"548","severity":1,"message":"575","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":31},{"ruleId":"548","severity":1,"message":"576","line":2,"column":10,"nodeType":"550","messageId":"551","endLine":2,"endColumn":15},{"ruleId":"548","severity":1,"message":"577","line":1,"column":17,"nodeType":"550","messageId":"551","endLine":1,"endColumn":25},{"ruleId":"548","severity":1,"message":"578","line":2,"column":8,"nodeType":"550","messageId":"551","endLine":2,"endColumn":12},{"ruleId":"548","severity":1,"message":"573","line":6,"column":3,"nodeType":"550","messageId":"551","endLine":6,"endColumn":11},{"ruleId":"548","severity":1,"message":"579","line":9,"column":8,"nodeType":"550","messageId":"551","endLine":9,"endColumn":18},{"ruleId":"548","severity":1,"message":"580","line":13,"column":8,"nodeType":"550","messageId":"551","endLine":13,"endColumn":19},{"ruleId":"548","severity":1,"message":"581","line":15,"column":8,"nodeType":"550","messageId":"551","endLine":15,"endColumn":15},{"ruleId":"548","severity":1,"message":"558","line":2,"column":3,"nodeType":"550","messageId":"551","endLine":2,"endColumn":19},{"ruleId":"548","severity":1,"message":"582","line":6,"column":3,"nodeType":"550","messageId":"551","endLine":6,"endColumn":9},{"ruleId":"548","severity":1,"message":"583","line":13,"column":10,"nodeType":"550","messageId":"551","endLine":13,"endColumn":16},{"ruleId":"548","severity":1,"message":"584","line":4,"column":3,"nodeType":"550","messageId":"551","endLine":4,"endColumn":8},{"ruleId":"548","severity":1,"message":"574","line":5,"column":3,"nodeType":"550","messageId":"551","endLine":5,"endColumn":6},{"ruleId":"548","severity":1,"message":"585","line":20,"column":3,"nodeType":"550","messageId":"551","endLine":20,"endColumn":13},{"ruleId":"548","severity":1,"message":"586","line":22,"column":3,"nodeType":"550","messageId":"551","endLine":22,"endColumn":13},{"ruleId":"548","severity":1,"message":"587","line":25,"column":21,"nodeType":"550","messageId":"551","endLine":25,"endColumn":25},{"ruleId":"548","severity":1,"message":"588","line":29,"column":10,"nodeType":"550","messageId":"551","endLine":29,"endColumn":26},{"ruleId":"548","severity":1,"message":"589","line":96,"column":9,"nodeType":"550","messageId":"551","endLine":96,"endColumn":14},{"ruleId":"548","severity":1,"message":"577","line":6,"column":10,"nodeType":"550","messageId":"551","endLine":6,"endColumn":18},{"ruleId":"548","severity":1,"message":"574","line":1,"column":22,"nodeType":"550","messageId":"551","endLine":1,"endColumn":25},{"ruleId":"548","severity":1,"message":"575","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":31},{"ruleId":"563","severity":1,"message":"590","line":17,"column":6,"nodeType":"565","endLine":17,"endColumn":16,"suggestions":"591"},{"ruleId":"548","severity":1,"message":"592","line":1,"column":10,"nodeType":"550","messageId":"551","endLine":1,"endColumn":12},{"ruleId":"548","severity":1,"message":"593","line":1,"column":33,"nodeType":"550","messageId":"551","endLine":1,"endColumn":50},{"ruleId":"548","severity":1,"message":"575","line":1,"column":27,"nodeType":"550","messageId":"551","endLine":1,"endColumn":31},"no-native-reassign",["594"],"no-negated-in-lhs",["595"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","@typescript-eslint/no-unused-vars","'Expose' is defined but never used.","Identifier","unusedVar","'Type' is defined but never used.",["594"],["595"],"'plainToClass' is defined but never used.","'Transform' is defined but never used.","'RequestOptions' is defined but never used.","'CircularProgress' is defined but never used.","'groupsErrorState' is defined but never used.","'GroupsState' is defined but never used.","'Icon' is defined but never used.","'Alert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["596"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["597"],"'result' is assigned a value but never used.","'success' is assigned a value but never used.","'SelectedAgentQP' is defined but never used.","'SelectedGroupQP' is defined but never used.","'useTheme' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'Modal' is defined but never used.","'useState' is defined but never used.","'clsx' is defined but never used.","'IconButton' is defined but never used.","'CssBaseline' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'IGroup' is defined but never used.","'Badge' is defined but never used.","'Typography' is defined but never used.","'withStyles' is defined but never used.","'Star' is defined but never used.","'UserActiveStatus' is defined but never used.","'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'invitations'. Either include it or remove the dependency array.",["598"],"'FC' is defined but never used.","'PropsWithChildren' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},"Update the dependencies array to be: [inviteResults, invitationErrors, dispatch]",{"range":"605","text":"606"},"Update the dependencies array to be: [dispatch, error, history, success]",{"range":"607","text":"608"},"Update the dependencies array to be: [dispatch, invitations]",{"range":"609","text":"610"},[3754,3787],"[inviteResults, invitationErrors, dispatch]",[1735,1761],"[dispatch, error, history, success]",[685,695],"[dispatch, invitations]"]