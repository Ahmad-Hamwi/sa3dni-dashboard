[{"D:\\React\\dashboard-new\\src\\index.tsx":"1","D:\\React\\dashboard-new\\src\\presentation\\store\\store.ts":"2","D:\\React\\dashboard-new\\src\\presentation\\theme\\theme.tsx":"3","D:\\React\\dashboard-new\\src\\presentation\\app\\App.tsx":"4","D:\\React\\dashboard-new\\src\\presentation\\store\\reducers.ts":"5","D:\\React\\dashboard-new\\src\\di\\injection.ts":"6","D:\\React\\dashboard-new\\src\\presentation\\route\\routes.ts":"7","D:\\React\\dashboard-new\\src\\presentation\\app\\ErrorBoundary.tsx":"8","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\Register.tsx":"9","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\Login.tsx":"10","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\redux\\reducer.ts":"11","D:\\React\\dashboard-new\\src\\di\\module\\usecases_module.ts":"12","D:\\React\\dashboard-new\\src\\di\\module\\gateways_module.ts":"13","D:\\React\\dashboard-new\\src\\di\\container\\Container.ts":"14","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\redux\\actions.ts":"15","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\redux\\reducer.ts":"16","D:\\React\\dashboard-new\\src\\presentation\\components\\error\\Error.tsx":"17","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\redux\\states.ts":"18","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\IAppCache.ts":"19","D:\\React\\dashboard-new\\src\\infrastructure\\service\\AuthService.ts":"20","D:\\React\\dashboard-new\\src\\domain\\gateway\\IAuthService.ts":"21","D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\LoginUseCase.ts":"22","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\redux\\states.ts":"23","D:\\React\\dashboard-new\\src\\infrastructure\\model\\UserModel.ts":"24","D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\ParamUseCase.ts":"25","D:\\React\\dashboard-new\\src\\domain\\entity\\User.ts":"26","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\redux\\actions.ts":"27","D:\\React\\dashboard-new\\src\\di\\module\\network_module.ts":"28","D:\\React\\dashboard-new\\src\\di\\module\\cache_module.ts":"29","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\config.js":"30","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\IApiExceptionFactory.ts":"31","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\ApiExceptionFactory.ts":"32","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\IApiClinet.ts":"33","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\AxiosApiClient.ts":"34","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\cache_constants.ts":"35","D:\\React\\dashboard-new\\src\\domain\\exception\\Exception.ts":"36","D:\\React\\dashboard-new\\src\\domain\\exception\\UnauthorizedException.ts":"37","D:\\React\\dashboard-new\\src\\infrastructure\\exception\\ServerException.ts":"38","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\auth\\LoginResponse.ts":"39","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\BaseResponse.ts":"40","D:\\React\\dashboard-new\\src\\presentation\\theme\\fonts\\productSansFontProps.ts":"41","D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRepository.ts":"42","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\AxiosApiClientProxy.ts":"43","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\AppCache.ts":"44","D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\RegisterUseCase.ts":"45","D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRepository.ts":"46","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\LoggingInterceptor.ts":"47","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\ICacheStorage.ts":"48","D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\WebLocalStorage.ts":"49","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUserDetailsUseCase.ts":"50","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUsersUseCase.ts":"51","D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\AuthorizationInterceptor.ts":"52","D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\UseCase.ts":"53","D:\\React\\dashboard-new\\src\\presentation\\components\\loader\\TicketLoading.tsx":"54","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\Dashboard.tsx":"55","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\chats\\Chats.tsx":"56","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\DashboardDrawerAndAppBar.tsx":"57","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\Workspace.tsx":"58","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\DrawerListItems.tsx":"59","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceListSection.tsx":"60","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceInfoSection.tsx":"61","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupsList.tsx":"62","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentsList.tsx":"63","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\invites\\Invites.tsx":"64","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupDetails.tsx":"65","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\AgentDetails.tsx":"66","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentListItem.tsx":"67","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupsListItem.tsx":"68","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupMembers.tsx":"69","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupPerfomance.tsx":"70","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupBanner.tsx":"71","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\redux\\reducer.ts":"72","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\redux\\states.ts":"73","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\redux\\actions.ts":"74","D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRoleRepository.ts":"75","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\DeleteUserUseCase.ts":"76","D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRoleRepository.ts":"77","D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\ChangeUserRoleUseCase.ts":"78","D:\\React\\dashboard-new\\src\\domain\\interactor\\userrole\\GetUserRolesUseCase.ts":"79","D:\\React\\dashboard-new\\src\\domain\\exception\\UnknownException.ts":"80","D:\\React\\dashboard-new\\src\\domain\\entity\\UserRole.ts":"81","D:\\React\\dashboard-new\\src\\presentation\\app\\redux\\auth\\reducer.ts":"82","D:\\React\\dashboard-new\\src\\presentation\\app\\redux\\auth\\states.ts":"83","D:\\React\\dashboard-new\\src\\presentation\\app\\redux\\auth\\actions.ts":"84","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentBanner.tsx":"85","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentGroups.tsx":"86","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentAdditionalInfo.tsx":"87","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentPerformance.tsx":"88","D:\\React\\dashboard-new\\src\\presentation\\route\\AuthenticatedRoute.tsx":"89"},{"size":565,"mtime":1626436007030,"results":"90","hashOfConfig":"91"},{"size":361,"mtime":1625510978560,"results":"92","hashOfConfig":"91"},{"size":1354,"mtime":1625700616517,"results":"93","hashOfConfig":"91"},{"size":1129,"mtime":1626441036298,"results":"94","hashOfConfig":"91"},{"size":454,"mtime":1626215023016,"results":"95","hashOfConfig":"91"},{"size":775,"mtime":1625700610108,"results":"96","hashOfConfig":"91"},{"size":301,"mtime":1625510978560,"results":"97","hashOfConfig":"91"},{"size":483,"mtime":1625510978556,"results":"98","hashOfConfig":"91"},{"size":4725,"mtime":1625701723462,"results":"99","hashOfConfig":"91"},{"size":4087,"mtime":1626440802221,"results":"100","hashOfConfig":"91"},{"size":999,"mtime":1625510978559,"results":"101","hashOfConfig":"91"},{"size":2423,"mtime":1626210312111,"results":"102","hashOfConfig":"91"},{"size":1467,"mtime":1626210312110,"results":"103","hashOfConfig":"91"},{"size":1315,"mtime":1625510978539,"results":"104","hashOfConfig":"91"},{"size":577,"mtime":1626441452593,"results":"105","hashOfConfig":"91"},{"size":943,"mtime":1625510978558,"results":"106","hashOfConfig":"91"},{"size":392,"mtime":1625510978557,"results":"107","hashOfConfig":"91"},{"size":573,"mtime":1625510978559,"results":"108","hashOfConfig":"91"},{"size":161,"mtime":1625510978548,"results":"109","hashOfConfig":"91"},{"size":1402,"mtime":1625700610129,"results":"110","hashOfConfig":"91"},{"size":444,"mtime":1625700610115,"results":"111","hashOfConfig":"91"},{"size":717,"mtime":1625700610116,"results":"112","hashOfConfig":"91"},{"size":540,"mtime":1625510978558,"results":"113","hashOfConfig":"91"},{"size":413,"mtime":1625700610118,"results":"114","hashOfConfig":"91"},{"size":114,"mtime":1625510978546,"results":"115","hashOfConfig":"91"},{"size":452,"mtime":1625733995410,"results":"116","hashOfConfig":"91"},{"size":877,"mtime":1625701042443,"results":"117","hashOfConfig":"91"},{"size":3282,"mtime":1625700610113,"results":"118","hashOfConfig":"91"},{"size":741,"mtime":1625700610108,"results":"119","hashOfConfig":"91"},{"size":378,"mtime":1626210312142,"results":"120","hashOfConfig":"91"},{"size":277,"mtime":1625510978552,"results":"121","hashOfConfig":"91"},{"size":638,"mtime":1625700616703,"results":"122","hashOfConfig":"91"},{"size":625,"mtime":1626210312141,"results":"123","hashOfConfig":"91"},{"size":1829,"mtime":1626215021799,"results":"124","hashOfConfig":"91"},{"size":41,"mtime":1625510978549,"results":"125","hashOfConfig":"91"},{"size":344,"mtime":1626210312112,"results":"126","hashOfConfig":"91"},{"size":201,"mtime":1625510978544,"results":"127","hashOfConfig":"91"},{"size":202,"mtime":1625510978547,"results":"128","hashOfConfig":"91"},{"size":260,"mtime":1625700610126,"results":"129","hashOfConfig":"91"},{"size":169,"mtime":1625700610125,"results":"130","hashOfConfig":"91"},{"size":2928,"mtime":1624295352006,"results":"131","hashOfConfig":"91"},{"size":307,"mtime":1626210312137,"results":"132","hashOfConfig":"91"},{"size":998,"mtime":1625700610123,"results":"133","hashOfConfig":"91"},{"size":477,"mtime":1625700610118,"results":"134","hashOfConfig":"91"},{"size":744,"mtime":1625700610116,"results":"135","hashOfConfig":"91"},{"size":1463,"mtime":1626210312143,"results":"136","hashOfConfig":"91"},{"size":765,"mtime":1625700610124,"results":"137","hashOfConfig":"91"},{"size":582,"mtime":1625700610121,"results":"138","hashOfConfig":"91"},{"size":1295,"mtime":1625700610122,"results":"139","hashOfConfig":"91"},{"size":789,"mtime":1625700610117,"results":"140","hashOfConfig":"91"},{"size":498,"mtime":1625700610117,"results":"141","hashOfConfig":"91"},{"size":858,"mtime":1625700610124,"results":"142","hashOfConfig":"91"},{"size":94,"mtime":1625510978546,"results":"143","hashOfConfig":"91"},{"size":845,"mtime":1625700616450,"results":"144","hashOfConfig":"91"},{"size":959,"mtime":1625731940206,"results":"145","hashOfConfig":"91"},{"size":74,"mtime":1623156406347,"results":"146","hashOfConfig":"91"},{"size":2307,"mtime":1623156406343,"results":"147","hashOfConfig":"91"},{"size":645,"mtime":1625732177173,"results":"148","hashOfConfig":"91"},{"size":2962,"mtime":1625702820050,"results":"149","hashOfConfig":"91"},{"size":2275,"mtime":1625702782554,"results":"150","hashOfConfig":"91"},{"size":2610,"mtime":1625702798791,"results":"151","hashOfConfig":"91"},{"size":1109,"mtime":1623156406374,"results":"152","hashOfConfig":"91"},{"size":1701,"mtime":1625736089638,"results":"153","hashOfConfig":"91"},{"size":95,"mtime":1623156406389,"results":"154","hashOfConfig":"91"},{"size":2123,"mtime":1623156406382,"results":"155","hashOfConfig":"91"},{"size":2660,"mtime":1626215294983,"results":"156","hashOfConfig":"91"},{"size":5599,"mtime":1625734640801,"results":"157","hashOfConfig":"91"},{"size":2318,"mtime":1625702754799,"results":"158","hashOfConfig":"91"},{"size":4261,"mtime":1623156406384,"results":"159","hashOfConfig":"91"},{"size":1949,"mtime":1623156406385,"results":"160","hashOfConfig":"91"},{"size":1850,"mtime":1623156406379,"results":"161","hashOfConfig":"91"},{"size":1092,"mtime":1625731578407,"results":"162","hashOfConfig":"91"},{"size":919,"mtime":1625730739683,"results":"163","hashOfConfig":"91"},{"size":617,"mtime":1625734891511,"results":"164","hashOfConfig":"91"},{"size":337,"mtime":1626210312139,"results":"165","hashOfConfig":"91"},{"size":772,"mtime":1626210312140,"results":"166","hashOfConfig":"91"},{"size":1162,"mtime":1626210312144,"results":"167","hashOfConfig":"91"},{"size":889,"mtime":1626210312139,"results":"168","hashOfConfig":"91"},{"size":544,"mtime":1626210312140,"results":"169","hashOfConfig":"91"},{"size":172,"mtime":1626210312113,"results":"170","hashOfConfig":"91"},{"size":399,"mtime":1626210312111,"results":"171","hashOfConfig":"91"},{"size":774,"mtime":1626215023062,"results":"172","hashOfConfig":"91"},{"size":502,"mtime":1626440602117,"results":"173","hashOfConfig":"91"},{"size":770,"mtime":1626435545210,"results":"174","hashOfConfig":"91"},{"size":5185,"mtime":1626215021573,"results":"175","hashOfConfig":"91"},{"size":2238,"mtime":1626215021574,"results":"176","hashOfConfig":"91"},{"size":1544,"mtime":1626215021572,"results":"177","hashOfConfig":"91"},{"size":1921,"mtime":1626215021574,"results":"178","hashOfConfig":"91"},{"size":1142,"mtime":1626440432652,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9du7pf",{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"184"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"184"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"184"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"184"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"265"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"184"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"184"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"184"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"184"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"184"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"184"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"184"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"184"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"184"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"184"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"184"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"184"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"184"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"184"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\dashboard-new\\src\\index.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\store\\store.ts",[],["382","383"],"D:\\React\\dashboard-new\\src\\presentation\\theme\\theme.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\App.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\store\\reducers.ts",[],"D:\\React\\dashboard-new\\src\\di\\injection.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\route\\routes.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\ErrorBoundary.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\Register.tsx",["384","385"],"import {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Button,\n  createStyles,\n  Theme,\n  Card,\n  CircularProgress,\n  TextField,\n  Box,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast, Toaster } from \"react-hot-toast\";\nimport { clearState, registerSelector } from \"./redux/reducer\";\nimport { register } from \"./redux/actions\";\nimport { Routes } from \"../../../route/routes\";\n\nconst styles = makeStyles((theme: Theme) =>\n  createStyles({\n    card__register: {\n      borderRadius: theme.spacing(1),\n    },\n\n    form__register: {\n      marginTop: theme.spacing(5),\n      marginBottom: theme.spacing(5),\n      \"& .MuiTextField-root\": {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n      },\n    },\n  })\n);\n\nconst Register = () => {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { isLoading, success, error } = useSelector(registerSelector);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    dispatch(\n      register({\n        email,\n        password,\n        fullName,\n        companyName,\n        phoneNumber,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error.message);\n    }\n\n    if (success) {\n      history.replace(Routes.DASHBOARD);\n    }\n\n    return () => {\n      dispatch(clearState());\n    };\n  }, [dispatch, error, success]);\n\n  const classes = styles();\n\n  return (\n    <div>\n      <Toaster />\n      <AppBar position=\"fixed\" variant=\"outlined\">\n        <Toolbar>\n          <Box flexGrow={1}>\n            <Typography variant=\"h6\">Register a company</Typography>\n          </Box>\n          <Button\n            variant=\"text\"\n            color=\"inherit\"\n            component={Link}\n            to={Routes.LOGIN}\n          >\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100vh\"\n      >\n        <Card className={classes.card__register} variant=\"outlined\">\n          {isLoading && <LinearProgress />}\n          <Box\n            p={6}\n            display=\"flex\"\n            flexDirection=\"column\"\n            width={450}\n            minHeight={550}\n          >\n            <Box display=\"flex\" justifyContent=\"center\">\n              <Typography variant=\"h5\">Register Your Company</Typography>\n            </Box>\n            <Box flex={1}>\n              <form className={classes.form__register}>\n                <Box display=\"flex\" flexDirection=\"column\">\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Business Email\"\n                    onChange={(event) => {\n                      setEmail(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Workspace Name\"\n                    onChange={(event) => {\n                      setCompanyName(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(event) => {\n                      setPassword(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Phone\"\n                    onChange={(event) => {\n                      setPhoneNumber(event.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    label=\"Full Name\"\n                    onChange={(event) => {\n                      setFullName(event.target.value);\n                    }}\n                  />\n                </Box>\n              </form>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Button variant=\"text\" component={Link} to={Routes.LOGIN}>\n                Sign in instead\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n                Next\n              </Button>\n            </Box>\n          </Box>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nexport default Register;\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\Login.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\redux\\reducer.ts",[],"D:\\React\\dashboard-new\\src\\di\\module\\usecases_module.ts",[],"D:\\React\\dashboard-new\\src\\di\\module\\gateways_module.ts",[],"D:\\React\\dashboard-new\\src\\di\\container\\Container.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\redux\\actions.ts",["386"],"D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\redux\\reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\error\\Error.tsx",["387"],"import { FunctionComponent } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\n\r\nexport type ErrorProps = {\r\n  title?: string;\r\n  message?: string;\r\n  onBack?: () => void;\r\n  closable?: boolean;\r\n};\r\n\r\nexport const ErrorWrapper: FunctionComponent<ErrorProps> = ({\r\n  title,\r\n  message,\r\n  closable,\r\n  onBack,\r\n}) => {\r\n  // TODO: Show Modal here\r\n  return <h1>Error here</h1>;\r\n};\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\redux\\states.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\IAppCache.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\service\\AuthService.ts",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IAuthService.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\LoginUseCase.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\login\\redux\\states.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\model\\UserModel.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\ParamUseCase.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\User.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\auth\\register\\redux\\actions.ts",["388"],"import { setLoading, setRegisterFailed, setRegisterSuccess } from \"./reducer\";\nimport RegisterUseCase from \"../../../../../domain/interactor/auth/RegisterUseCase\";\nimport { resolve } from \"../../../../../di/injection\";\n\nexport type RegisterParams = {\n  email: string;\n  password: string;\n  fullName: string;\n  companyName: string;\n  phoneNumber: string;\n};\n\nexport const register = (params: RegisterParams) => async (dispatch: any) => {\n  dispatch(setLoading(true));\n\n  const registerUseCase = resolve<RegisterUseCase>(RegisterUseCase);\n\n  try {\n    const { success } = await registerUseCase.execute({\n      email: params.email,\n      password: params.password,\n      fullName: params.fullName,\n      phoneNumber: params.phoneNumber,\n      companyName: params.companyName,\n    });\n\n    dispatch(setRegisterSuccess());\n  } catch (e) {\n    dispatch(setRegisterFailed(e));\n  }\n};\n","D:\\React\\dashboard-new\\src\\di\\module\\network_module.ts",[],"D:\\React\\dashboard-new\\src\\di\\module\\cache_module.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\config.js",[],["389","390"],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\IApiExceptionFactory.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\exception\\ApiExceptionFactory.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\IApiClinet.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\api\\client\\AxiosApiClient.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\cache_constants.ts",[],"D:\\React\\dashboard-new\\src\\domain\\exception\\Exception.ts",[],"D:\\React\\dashboard-new\\src\\domain\\exception\\UnauthorizedException.ts",["391"],"import { Exception } from \"./Exception\";\r\n\r\nexport default class UnauthorizedException extends Exception {\r\n  constructor(code: number, message: string | undefined) {\r\n    super(code, message);\r\n  }\r\n}","D:\\React\\dashboard-new\\src\\infrastructure\\exception\\ServerException.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\auth\\LoginResponse.ts",["392","393"],"import { BaseResponse } from \"../BaseResponse\";\r\nimport UserModel from \"../../../model/UserModel\";\r\nimport { Expose, Type } from \"class-transformer\";\r\n\r\nexport default class LoginResponse extends BaseResponse<LoginResponseData> {}\r\n\r\nexport class LoginResponseData {\r\n  user!: UserModel;\r\n\r\n  token!: string;\r\n}",["394","395"],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\model\\BaseResponse.ts",["396","397","398","399"],"import { Expose, plainToClass, Transform, Type } from \"class-transformer\";\r\n\r\nexport class BaseResponse<T> {\r\n  metadata: Metadata;\r\n\r\n  data: T;\r\n}\r\n\r\nexport class Metadata {\r\n  status: boolean;\r\n\r\n  statusCode: number;\r\n\r\n  message: string;\r\n}","D:\\React\\dashboard-new\\src\\presentation\\theme\\fonts\\productSansFontProps.ts",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\AxiosApiClientProxy.ts",["400"],"import AxiosApiClient from \"../provider/api/client/AxiosApiClient\";\r\nimport { AxiosInstance, AxiosResponse } from \"axios\";\r\nimport IApiExceptionFactory from \"./exception/IApiExceptionFactory\";\r\nimport { ApiResponse, RequestOptions } from \"../provider/api/client/IApiClinet\";\r\n\r\nexport default class AxiosApiClientProxy extends AxiosApiClient {\r\n  constructor(\r\n    private readonly exceptionFactory: IApiExceptionFactory,\r\n    axios: AxiosInstance\r\n  ) {\r\n    super(axios);\r\n  }\r\n\r\n  protected async tryRequest<T>(\r\n    request: () => Promise<AxiosResponse<T>>\r\n  ): Promise<ApiResponse<T>> {\r\n    const response = await super.tryRequest(request);\r\n\r\n    this.processResponseStatus(response.data);\r\n\r\n    return response;\r\n  }\r\n\r\n  private processResponseStatus(data: any) {\r\n    if (data.metadata) {\r\n      if (!data.metadata.status) {\r\n        throw this.exceptionFactory.createException(\r\n          data.metadata.statusCode,\r\n          data.metadata.message\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","D:\\React\\dashboard-new\\src\\infrastructure\\local\\cache\\AppCache.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\auth\\RegisterUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRepository.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\LoggingInterceptor.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\ICacheStorage.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\provider\\cache\\WebLocalStorage.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUserDetailsUseCase.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\GetUsersUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\remote\\interceptor\\AuthorizationInterceptor.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\base\\UseCase.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\components\\loader\\TicketLoading.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\Dashboard.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\chats\\Chats.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\DashboardDrawerAndAppBar.tsx",["401","402","403","404","405","406"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DrawerListItems from \"./DrawerListItems\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n      width: theme.spacing(8) + 1,\r\n      \"& .MuiPaper-root\": {\r\n        width: theme.spacing(8) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      minHeight: theme.spacing(6),\r\n    },\r\n    drawerItem: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      borderRadius: theme.spacing(4),\r\n      margin: theme.spacing(1),\r\n      justifyContent: \"center\",\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        minWidth: theme.spacing(3),\r\n      },\r\n    },\r\n\r\n    selectedDrawerItem: {\r\n      borderRadius: theme.spacing(3),\r\n    },\r\n\r\n    main: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\ntype DashboardDrawerAndAppBarProps = {};\r\n\r\nconst DashboardDrawerAndAppBar: React.FC<DashboardDrawerAndAppBarProps> = ({\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={classes.appBar}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" noWrap>\r\n            Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer variant=\"permanent\" className={classes.drawer}>\r\n        <div className={classes.toolbar} />\r\n        <DrawerListItems />\r\n      </Drawer>\r\n      <div className={classes.main}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardDrawerAndAppBar;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\Workspace.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\DrawerListItems.tsx",["407"],"import ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Chat, SupervisorAccount } from \"@material-ui/icons\";\r\nimport { ToggleButton } from \"@material-ui/lab\";\r\nimport { useState } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { useRouteMatch, Link, useLocation } from \"react-router-dom\";\r\nimport {Routes} from \"../../../route/routes\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawerItem: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      borderRadius: theme.spacing(4),\r\n      margin: theme.spacing(1),\r\n      justifyContent: \"center\",\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        minWidth: theme.spacing(3),\r\n      },\r\n    },\r\n\r\n    selectedDrawerItem: {\r\n      border: 0,\r\n      borderRadius: theme.spacing(3),\r\n      \"&.MuiToggleButton-root.Mui-selected\": {\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n    },\r\n\r\n    IconSelected: {\r\n      color: \"black\",\r\n    },\r\n  })\r\n);\r\n\r\nconst DrawerListItems = () => {\r\n  const classes = useStyles();\r\n\r\n  // The Path object has the route when the component has been initially rendered.\r\n  let { path } = useRouteMatch();\r\n  // The location object automatically gets updated by the router when the route is changed.\r\n  // and thus, I'm using it for syncronizing the selection of the drawer icons with the current selected route.\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <List>\r\n      <ListItem\r\n        alignItems=\"center\"\r\n        className={classes.drawerItem}\r\n        component={Link}\r\n        to={path + Routes.CHATS}\r\n      >\r\n        <ToggleButton\r\n          selected={location.pathname.includes(path + Routes.CHATS)}\r\n          className={classes.selectedDrawerItem}\r\n        >\r\n          <ListItemIcon>\r\n            <Chat\r\n              className={\r\n                location.pathname === path + Routes.CHATS\r\n                  ? classes.IconSelected\r\n                  : undefined\r\n              }\r\n            />\r\n          </ListItemIcon>\r\n        </ToggleButton>\r\n      </ListItem>\r\n\r\n      <ListItem\r\n        alignItems=\"center\"\r\n        className={classes.drawerItem}\r\n        component={Link}\r\n        to={path + Routes.WORKSPACE}\r\n      >\r\n        <ToggleButton\r\n          className={classes.selectedDrawerItem}\r\n          selected={location.pathname.includes(path + Routes.WORKSPACE)}\r\n        >\r\n          <ListItemIcon>\r\n            <SupervisorAccount\r\n              className={\r\n                location.pathname === path + Routes.WORKSPACE\r\n                  ? classes.IconSelected\r\n                  : undefined\r\n              }\r\n            />\r\n          </ListItemIcon>\r\n        </ToggleButton>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default DrawerListItems;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceListSection.tsx",["408"],"import React from \"react\";\r\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport AgentsList from \"./agents/AgentsList\";\r\nimport GroupsList from \"./groups/GroupsList\";\r\nimport Invites from \"./invites/Invites\";\r\nimport {Routes} from \"../../../../route/routes\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  tabBar: {\r\n    // width: \"60%\",\r\n  },\r\n\r\n  listSection: {\r\n    position: \"relative\",\r\n    width: \"60%\",\r\n  },\r\n\r\n  listSectionContent: {\r\n    maxHeight: `calc(100vh - ${theme.spacing(12)}px)`,\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nconst WorkspaceListSection = () => {\r\n  const classes = useStyles();\r\n\r\n  const location = useLocation();\r\n  let { path } = useRouteMatch();\r\n\r\n  let initialIndex =\r\n    location.pathname === path + Routes.AGENTS\r\n      ? 0\r\n      : location.pathname === path + Routes.INVITES\r\n      ? 1\r\n      : location.pathname === path + Routes.GROUPS\r\n      ? 2\r\n      : 0;\r\n\r\n  const [tabIndex, setTabIndex] = React.useState(initialIndex);\r\n\r\n  return (\r\n    <div className={classes.listSection}>\r\n      <AppBar position=\"static\" variant=\"outlined\" className={classes.tabBar}>\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={(e, v) => {\r\n            setTabIndex(v);\r\n          }}\r\n        >\r\n          <Tab label=\"Agents\" component={Link} to={path + Routes.AGENTS} />\r\n          <Tab label=\"Invites\" component={Link} to={path + Routes.INVITES} />\r\n          <Tab label=\"Groups\" component={Link} to={path + Routes.GROUPS} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className={classes.listSectionContent}>\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <Redirect to={path + Routes.AGENTS} />\r\n          </Route>\r\n          <Route path={path + Routes.AGENTS} component={AgentsList} />\r\n          <Route path={path + Routes.INVITES} component={Invites} />\r\n          <Route path={path + Routes.GROUPS} component={GroupsList} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkspaceListSection;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\WorkspaceInfoSection.tsx",["409","410"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport AgentDetails from \"./agents/details/AgentDetails\";\r\nimport GroupDetails from \"./groups/details/GroupDetails\";\r\nimport qs from \"qs\";\r\nimport {Routes} from \"../../../../route/routes\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  infoTopBar: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: theme.spacing(6) + 2,\r\n  },\r\n\r\n  infoTopBarText: {\r\n    fontWeight: 500,\r\n  },\r\n\r\n  infoSectionContent: {\r\n    maxHeight: `calc(100vh - ${theme.spacing(12)}px)`,\r\n    overflow: \"auto\",\r\n  },\r\n\r\n  infoSection: {\r\n    position: \"relative\",\r\n    width: \"40%\",\r\n    minWidth: 640,\r\n  },\r\n}));\r\n\r\ninterface SelectedAgentQP {\r\n  agentId: number;\r\n}\r\n\r\ninterface SelectedGroupQP {\r\n  groupId: number;\r\n}\r\n\r\nconst WorkspaceInfoSection = () => {\r\n  const classes = useStyles();\r\n\r\n  const { path } = useRouteMatch();\r\n\r\n  const location = useLocation();\r\n\r\n  const { agentId: selectedAgentId } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const { groupId: selectedGroupId } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  const emptyComponent = () => <></>;\r\n\r\n  return (\r\n    <div className={classes.infoSection}>\r\n      <AppBar\r\n        position=\"static\"\r\n        variant=\"outlined\"\r\n        color=\"transparent\"\r\n        className={classes.infoTopBar}\r\n      >\r\n        <Typography className={classes.infoTopBarText}>\r\n          {location.pathname.includes(Routes.AGENTS)\r\n            ? \"Agent Info\"\r\n            : location.pathname.includes(Routes.GROUPS)\r\n            ? \"Group Info\"\r\n            : null}\r\n        </Typography>\r\n      </AppBar>\r\n      <div className={classes.infoSectionContent}>\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <Redirect to={path + Routes.AGENTS} />\r\n          </Route>\r\n          <Route\r\n            path={path + Routes.AGENTS}\r\n            component={\r\n              selectedAgentId === undefined ? emptyComponent : AgentDetails\r\n            }\r\n          />\r\n          <Route path={path + Routes.INVITES} render={() => <></>} />\r\n          <Route\r\n            path={path + Routes.GROUPS}\r\n            component={\r\n              selectedGroupId === undefined ? emptyComponent : GroupDetails\r\n            }\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkspaceInfoSection;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupsList.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentsList.tsx",["411","412","413","414","415","416","417","418"],"import {\n  List,\n  createStyles,\n  makeStyles,\n  Theme,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nimport AgentListItem, { Status, Role } from \"./AgentListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearActionReducer, usersSelector } from \"./redux/reducer\";\nimport { useEffect, useState } from \"react\";\nimport { clearState } from \"./redux/states\";\nimport User, { IUser } from \"../../../../../../domain/entity/User\";\nimport { Toaster, toast } from \"react-hot-toast\";\nimport { getUsers } from \"./redux/actions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    agentsList: {\n      padding: 0,\n    },\n\n    loadingContainer: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  })\n);\n\nexport default function AgentsList() {\n  const classes = useStyles();\n\n  const { isLoading, success, error } = useSelector(usersSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error.message);\n    }\n  }, [dispatch, error]);\n\n  return (\n    <>\n      <Toaster />\n      {isLoading && (\n        <div className={classes.loadingContainer}>\n          <CircularProgress />\n        </div>\n      )}\n      <List className={classes.agentsList}>\n        {success &&\n          success.users.map((agentItem) => (\n            <AgentListItem\n              key={agentItem.id}\n              id={agentItem.id}\n              name={agentItem.name}\n              email={\"SomeEmail@Gmail.com\"}\n              role={1}\n              status={0}\n            />\n          ))}\n      </List>\n    </>\n  );\n}\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\invites\\Invites.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupDetails.tsx",["419"],"import {\r\n  CircularProgress,\r\n  Card,\r\n  makeStyles,\r\n  Theme,\r\n  Avatar,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport GroupBanner from \"./GroupBanner\";\r\nimport GroupMembers from \"./GroupMembers\";\r\nimport GroupPerformance from \"./GroupPerfomance\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadingContainer: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  card: {\r\n    width: \"90%\",\r\n    height: \"auto\",\r\n    margin: `${theme.spacing(8)}px auto`,\r\n    background: theme.palette.secondary.main,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(12),\r\n    height: theme.spacing(12),\r\n    color: theme.palette.primary.contrastText,\r\n    backgroundColor: theme.palette.primary.main,\r\n    fontSize: 48,\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  banner: {\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(6),\r\n  },\r\n  nameArea: {\r\n    marginLeft: theme.spacing(4),\r\n    marginRight: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  roleText: {\r\n    fontWeight: 500,\r\n    padding: theme.spacing(1),\r\n  },\r\n  role: {\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport interface GroupDetailsProps {\r\n  groupName: String;\r\n}\r\n\r\nconst GroupDetails: FC<GroupDetailsProps> = (props: GroupDetailsProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.loadingContainer}>\r\n        <CircularProgress />\r\n      </div>\r\n      <Card variant=\"outlined\" className={classes.card}>\r\n        <div className={classes.cardContent}>\r\n          <GroupBanner groupName={\"General\"} />\r\n          <Divider />\r\n          <GroupMembers users={[]} />\r\n          <Divider />\r\n          <GroupPerformance totalChatAccepted={64} chatSatisfaction={\"3/10\"} />\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupDetails;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\AgentDetails.tsx",["420"],"import {\r\n  CircularProgress,\r\n  Card,\r\n  makeStyles,\r\n  Theme,\r\n  Avatar,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport AgentBanner from \"./components/AgentBanner\";\r\nimport AgentGroups from \"./components/AgentGroups\";\r\nimport AgentPerformance from \"./components/AgentPerformance\";\r\nimport AgentAddtionalInfo from \"./components/AgentAdditionalInfo\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadingContainer: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  card: {\r\n    width: \"90%\",\r\n    height: \"auto\",\r\n    margin: `${theme.spacing(8)}px auto`,\r\n    background: theme.palette.secondary.main,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(12),\r\n    height: theme.spacing(12),\r\n    color: theme.palette.primary.contrastText,\r\n    backgroundColor: theme.palette.primary.main,\r\n    fontSize: 48,\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  banner: {\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(6),\r\n  },\r\n  nameArea: {\r\n    marginLeft: theme.spacing(4),\r\n    marginRight: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  roleText: {\r\n    fontWeight: 500,\r\n    padding: theme.spacing(1),\r\n  },\r\n  role: {\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport enum Status {\r\n  ONLINE,\r\n  BUSY,\r\n  OFFLINE,\r\n}\r\n\r\nexport enum Role {\r\n  OWNER,\r\n  ADMIN,\r\n  NORMAL,\r\n}\r\n\r\nexport interface AgentDetailsProps {\r\n  status: Status;\r\n  username: String;\r\n  jobTitle: String;\r\n  email: String;\r\n  role: Role;\r\n}\r\n\r\nconst AgentDetails: FC<AgentDetailsProps> = (props: AgentDetailsProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.loadingContainer}>\r\n        <CircularProgress />\r\n      </div>\r\n      <Card variant=\"outlined\" className={classes.card}>\r\n        <div className={classes.cardContent}>\r\n          <AgentBanner\r\n            status={Status.BUSY}\r\n            username={\"Abdulrahman Tayara\"}\r\n            jobTitle={\"Support Agent\"}\r\n            email={\"email@email.com\"}\r\n            role={Role.NORMAL}\r\n          />\r\n          <Divider />\r\n          <AgentGroups groups={[]} />\r\n          <Divider />\r\n          <AgentPerformance totalChatAccepted={64} chatSatisfaction={\"3/10\"} />\r\n          <Divider />\r\n          <AgentAddtionalInfo chatLimit={4} />\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgentDetails;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\AgentListItem.tsx",["421"],"import { FC } from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  Avatar,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  ListItemText,\r\n  Box,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Typography,\r\n  useTheme,\r\n  Divider,\r\n  withStyles,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\n\r\nimport { MoreHoriz, Star, VerifiedUser } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\nimport {Routes} from \"../../../../../route/routes\";\r\n\r\nconst OnlineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"$ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst BusyBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#D93131\",\r\n      color: \"#D93131\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst OfflineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#A8A8A8\",\r\n      color: \"#A8A8A8\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    listItemIcon: {\r\n      width: theme.spacing(8),\r\n    },\r\n\r\n    avatar: {\r\n      width: theme.spacing(6),\r\n      height: theme.spacing(6),\r\n      color: theme.palette.secondary.contrastText,\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n\r\n    listItemText: {\r\n      \"& .MuiTypography-body1\": {\r\n        fontWeight: 500,\r\n      },\r\n    },\r\n\r\n    roleText: {\r\n      fontWeight: 500,\r\n      padding: theme.spacing(1),\r\n    },\r\n\r\n    listItemButton: {\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n    },\r\n\r\n    busyBadge: {\r\n      backgroundColor: \"#D93131\",\r\n      color: \"#D93131\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n);\r\n\r\nexport enum Status {\r\n  ONLINE,\r\n  BUSY,\r\n  OFFLINE,\r\n}\r\n\r\nexport enum Role {\r\n  OWNER,\r\n  ADMIN,\r\n  NORMAL,\r\n}\r\n\r\nexport interface AgentListItemProps {\r\n  id: String;\r\n  name: String;\r\n  email: String;\r\n  role: Role;\r\n  status: Status;\r\n}\r\n\r\nexport interface QueryParams {\r\n  agentId: number;\r\n}\r\n\r\nconst AgentListItem: FC<AgentListItemProps> = (props: AgentListItemProps) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { path } = useRouteMatch();\r\n  const location = useLocation();\r\n\r\n  const avatar = <Avatar className={classes.avatar}>{props.name[0]}</Avatar>;\r\n\r\n  const { agentId: agentIdFromQueryParams } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        className={classes.listItemButton}\r\n        component={Link}\r\n        selected={agentIdFromQueryParams === props.id}\r\n        to={path + Routes.PARAM_AGENT_ID + \"=\" + props.id}\r\n      >\r\n        <ListItemIcon className={classes.listItemIcon}>\r\n          {props.status === Status.ONLINE ? (\r\n            <OnlineBadge\r\n              overlap=\"circle\"\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              variant=\"dot\"\r\n            >\r\n              {avatar}\r\n            </OnlineBadge>\r\n          ) : props.status === Status.BUSY ? (\r\n            <BusyBadge\r\n              overlap=\"circle\"\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              variant=\"dot\"\r\n            >\r\n              {avatar}\r\n            </BusyBadge>\r\n          ) : props.status === Status.OFFLINE ? (\r\n            <OfflineBadge\r\n              overlap=\"circle\"\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              variant=\"dot\"\r\n            >\r\n              {avatar}\r\n            </OfflineBadge>\r\n          ) : null}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          className={classes.listItemText}\r\n          primary={props.name}\r\n          secondary={props.email}\r\n        />\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          mx={theme.spacing(1)}\r\n          alignItems=\"center\"\r\n        >\r\n          {props.role === Role.OWNER ? (\r\n            <Star />\r\n          ) : props.role === Role.ADMIN ? (\r\n            <VerifiedUser />\r\n          ) : null}\r\n          <Typography className={classes.roleText}>\r\n            {props.role === Role.OWNER\r\n              ? \"Owner\"\r\n              : props.role === Role.ADMIN\r\n              ? \"Admin\"\r\n              : props.role === Role.NORMAL\r\n              ? \"Agent\"\r\n              : null}\r\n          </Typography>\r\n        </Box>\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge=\"end\" aria-label=\"options\">\r\n            <MoreHoriz />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgentListItem;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\GroupsListItem.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupMembers.tsx",["422","423","424"],"import {\r\n  Typography,\r\n  Box,\r\n  Theme,\r\n  makeStyles,\r\n  withStyles,\r\n  createStyles,\r\n  Badge,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\n\r\nconst OnlineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst BusyBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#D93131\",\r\n      color: \"#D93131\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst OfflineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#A8A8A8\",\r\n      color: \"#A8A8A8\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  content: {\r\n    margin: theme.spacing(3),\r\n  },\r\n\r\n  list: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n\r\n  title: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  avatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n    color: theme.palette.primary.contrastText,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  memberFlexItem: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  memberFlexItemText: {\r\n    color: theme.palette.secondary.contrastText,\r\n    fontWeight: 500,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport enum Status {\r\n  ONLINE,\r\n  BUSY,\r\n  OFFLINE,\r\n}\r\n\r\nexport interface User {\r\n  name: String;\r\n  status: Status;\r\n}\r\n\r\nexport interface GroupMembersProps {\r\n  users: User[];\r\n}\r\n\r\nconst GroupMembers: FC<GroupMembersProps> = (props: GroupMembersProps) => {\r\n  const classes = useStyles();\r\n\r\n  const members: User[] = [\r\n    {\r\n      name: \"Ahmad Hamwi\",\r\n      status: Status.ONLINE,\r\n    },\r\n    {\r\n      name: \"Mouaz Kassm\",\r\n      status: Status.OFFLINE,\r\n    },\r\n    {\r\n      name: \"Abdulrahman Tayara\",\r\n      status: Status.BUSY,\r\n    },\r\n    {\r\n      name: \"Mohammad Shatara\",\r\n      status: Status.ONLINE,\r\n    },\r\n    {\r\n      name: \"Mohamamad Nofal\",\r\n      status: Status.BUSY,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Members</Typography>\r\n      </div>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        className={classes.list}\r\n        flexWrap=\"wrap\"\r\n      >\r\n        {members.map((member) => (\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            className={classes.memberFlexItem}\r\n          >\r\n            {member.status == Status.ONLINE ? (\r\n              <OnlineBadge\r\n                overlap=\"circle\"\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\"\r\n              >\r\n                <Avatar className={classes.avatar}>{member.name[0]}</Avatar>\r\n              </OnlineBadge>\r\n            ) : member.status == Status.BUSY ? (\r\n              <BusyBadge\r\n                overlap=\"circle\"\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\"\r\n              >\r\n                <Avatar className={classes.avatar}>{member.name[0]}</Avatar>\r\n              </BusyBadge>\r\n            ) : member.status == Status.OFFLINE ? (\r\n              <OfflineBadge\r\n                overlap=\"circle\"\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\"\r\n              >\r\n                <Avatar className={classes.avatar}>{member.name[0]}</Avatar>\r\n              </OfflineBadge>\r\n            ) : null}\r\n            <Typography className={classes.memberFlexItemText}>\r\n              {member.name}\r\n            </Typography>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMembers;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupPerfomance.tsx",["425","426"],"import { Typography, Box, Card, Theme, makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  detailItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n\r\n  detailItemText: {\r\n    fontWeight: 400,\r\n  },\r\n}));\r\n\r\nexport interface Group {\r\n  name: String;\r\n}\r\n\r\nexport interface GroupPerformanceProps {\r\n  totalChatAccepted: number;\r\n  chatSatisfaction: String;\r\n}\r\n\r\nconst GroupPerformance: FC<GroupPerformanceProps> = (\r\n  props: GroupPerformanceProps\r\n) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Performance</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Total chats accepted (Last 7 days)\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.totalChatAccepted}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Chat satisfactions (Last 7 days)\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.chatSatisfaction}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupPerformance;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\groups\\details\\GroupBanner.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\redux\\reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\redux\\states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\redux\\actions.ts",[],"D:\\React\\dashboard-new\\src\\domain\\gateway\\IUserRoleRepository.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\DeleteUserUseCase.ts",[],"D:\\React\\dashboard-new\\src\\infrastructure\\repository\\UserRoleRepository.ts",[],"D:\\React\\dashboard-new\\src\\domain\\interactor\\user\\ChangeUserRoleUseCase.ts",["427"],"import ParamUseCase from \"../base/ParamUseCase\";\r\nimport {IUserRole} from \"../../entity/UserRole\";\r\nimport IUserRoleRepository from \"../../gateway/IUserRoleRepository\";\r\n\r\nexport default class ChangeUserRoleUseCase extends ParamUseCase<ChangeUserRoleParams, ChangeUserRoleResult> {\r\n\r\n    constructor(private readonly userRoleRepository: IUserRoleRepository) {\r\n        super();\r\n    }\r\n\r\n    async execute(param: ChangeUserRoleParams): Promise<ChangeUserRoleResult> {\r\n        const result = await this.userRoleRepository.updateRole(param.userId, param.roleId);\r\n\r\n        return {\r\n            userId: param.userId,\r\n            newRole: (await this.userRoleRepository.getRole(param.roleId))!\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport type ChangeUserRoleParams = {\r\n    userId: string,\r\n    roleId: string\r\n}\r\n\r\nexport type ChangeUserRoleResult = {\r\n    userId: string,\r\n    newRole: IUserRole\r\n}","D:\\React\\dashboard-new\\src\\domain\\interactor\\userrole\\GetUserRolesUseCase.ts",[],"D:\\React\\dashboard-new\\src\\domain\\exception\\UnknownException.ts",[],"D:\\React\\dashboard-new\\src\\domain\\entity\\UserRole.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\redux\\auth\\reducer.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\redux\\auth\\states.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\app\\redux\\auth\\actions.ts",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentBanner.tsx",["428","429","430","431","432","433","434","435"],"import {\r\n  makeStyles,\r\n  Theme,\r\n  Box,\r\n  withStyles,\r\n  createStyles,\r\n  Badge,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { VerifiedUser, Star } from \"@material-ui/icons\";\r\nimport { FC } from \"react\";\r\n\r\nconst OnlineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      width: theme.spacing(1.5),\r\n      height: theme.spacing(1.5),\r\n      borderRadius: theme.spacing(2),\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"$ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst BusyBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      width: theme.spacing(1.5),\r\n      height: theme.spacing(1.5),\r\n      borderRadius: theme.spacing(2),\r\n      backgroundColor: \"#D93131\",\r\n      color: \"#D93131\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst OfflineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      width: theme.spacing(1.5),\r\n      height: theme.spacing(1.5),\r\n      borderRadius: theme.spacing(2),\r\n      backgroundColor: \"#A8A8A8\",\r\n      color: \"#A8A8A8\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadingContainer: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  card: {\r\n    width: \"90%\",\r\n    height: \"auto\",\r\n    margin: `${theme.spacing(8)}px auto`,\r\n    background: theme.palette.secondary.main,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(12),\r\n    height: theme.spacing(12),\r\n    color: theme.palette.primary.contrastText,\r\n    backgroundColor: theme.palette.primary.main,\r\n    fontSize: 48,\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  banner: {\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(4),\r\n  },\r\n  nameArea: {\r\n    marginLeft: theme.spacing(4),\r\n    marginRight: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  roleText: {\r\n    fontWeight: 500,\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  role: {\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport enum Status {\r\n  ONLINE,\r\n  BUSY,\r\n  OFFLINE,\r\n}\r\n\r\nexport enum Role {\r\n  OWNER,\r\n  ADMIN,\r\n  NORMAL,\r\n}\r\n\r\nexport interface AgentBannerProps {\r\n  status: Status;\r\n  username: String;\r\n  jobTitle: String;\r\n  email: String;\r\n  role: Role;\r\n}\r\n\r\nconst AgentBanner: FC<AgentBannerProps> = (props: AgentBannerProps) => {\r\n  const classes = useStyles();\r\n\r\n  const avatar = <Avatar className={classes.avatar}>A</Avatar>;\r\n\r\n  return (\r\n    <div className={classes.banner}>\r\n      {props.status == Status.ONLINE ? (\r\n        <OnlineBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          {avatar}\r\n        </OnlineBadge>\r\n      ) : props.status == Status.BUSY ? (\r\n        <BusyBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          {avatar}\r\n        </BusyBadge>\r\n      ) : props.status == Status.OFFLINE ? (\r\n        <OfflineBadge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          variant=\"dot\"\r\n        >\r\n          {avatar}\r\n        </OfflineBadge>\r\n      ) : null}\r\n      <div className={classes.nameArea}>\r\n        <Box display=\"flex\" flexDirection=\"row\">\r\n          <Typography className={classes.roleText}>{props.username}</Typography>\r\n          <Box className={classes.role}>\r\n            {props.role == Role.OWNER ? (\r\n              <Star />\r\n            ) : props.role == Role.ADMIN ? (\r\n              <VerifiedUser />\r\n            ) : null}\r\n            <Typography className={classes.roleText}>\r\n              {props.role == Role.OWNER\r\n                ? \"Owner\"\r\n                : props.role == Role.ADMIN\r\n                ? \"Admin\"\r\n                : props.role == Role.NORMAL\r\n                ? null\r\n                : null}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Typography className={classes.roleText}>{props.jobTitle}</Typography>\r\n        <Typography className={classes.roleText}>{props.email}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentBanner;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentGroups.tsx",["436"],"import { Typography, Box, Card, Theme, makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  content: {\r\n    margin: theme.spacing(3),\r\n  },\r\n\r\n  list: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n\r\n  title: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  groupFlexItem: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginRight: theme.spacing(0.5),\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n    background: theme.palette.primary.main,\r\n    borderWidth: \"1px\",\r\n    border: \"1px solid #707070\",\r\n    borderRadius: theme.spacing(0.5),\r\n    color: theme.palette.primary.contrastText,\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1.5)}px`,\r\n    fontWeight: 500,\r\n  },\r\n}));\r\n\r\nexport interface Group {\r\n  name: String;\r\n}\r\n\r\nexport interface AgentGroupsProps {\r\n  groups: Group[];\r\n}\r\n\r\nconst AgentGroups: FC<AgentGroupsProps> = (props: AgentGroupsProps) => {\r\n  const classes = useStyles();\r\n\r\n  const groups: Group[] = [\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"My Group\",\r\n    },\r\n    {\r\n      name: \"ITE\",\r\n    },\r\n    {\r\n      name: \"SOME STUFF\",\r\n    },\r\n    {\r\n      name: \"Private\",\r\n    },\r\n    {\r\n      name: \"The Most Amazing Group\",\r\n    },\r\n    {\r\n      name: \"Haha\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Memes\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n    {\r\n      name: \"Group\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Groups</Typography>\r\n      </div>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        className={classes.list}\r\n        flexWrap=\"wrap\"\r\n      >\r\n        {groups.map((group) => (\r\n          <Typography className={classes.groupFlexItem}>\r\n            {group.name}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentGroups;\r\n","D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentAdditionalInfo.tsx",[],"D:\\React\\dashboard-new\\src\\presentation\\pages\\dashboard\\navigation\\workspace\\agents\\details\\components\\AgentPerformance.tsx",["437","438"],"import { Typography, Box, Card, Theme, makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  detailItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n\r\n  detailItemText: {\r\n    fontWeight: 400,\r\n  },\r\n}));\r\n\r\nexport interface Group {\r\n  name: String;\r\n}\r\n\r\nexport interface AgentPerformanceProps {\r\n  totalChatAccepted: number;\r\n  chatSatisfaction: String;\r\n}\r\n\r\nconst AgentPerformance: FC<AgentPerformanceProps> = (\r\n  props: AgentPerformanceProps\r\n) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant=\"h6\">Performance</Typography>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Total chats accepted\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.totalChatAccepted}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.detailItem}>\r\n          <Typography className={classes.detailItemText}>\r\n            Chat satisfactions\r\n          </Typography>\r\n          <Typography className={classes.detailItemText}>\r\n            {props.chatSatisfaction}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentPerformance;\r\n","D:\\React\\dashboard-new\\src\\presentation\\route\\AuthenticatedRoute.tsx",[],{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"443","severity":1,"message":"444","line":10,"column":3,"nodeType":"445","messageId":"446","endLine":10,"endColumn":19},{"ruleId":"447","severity":1,"message":"448","line":77,"column":6,"nodeType":"449","endLine":77,"endColumn":32,"suggestions":"450"},{"ruleId":"443","severity":1,"message":"451","line":12,"column":13,"nodeType":"445","messageId":"446","endLine":12,"endColumn":19},{"ruleId":"443","severity":1,"message":"452","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":15},{"ruleId":"443","severity":1,"message":"453","line":19,"column":13,"nodeType":"445","messageId":"446","endLine":19,"endColumn":20},{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"454","severity":1,"message":"455","line":4,"column":3,"nodeType":"456","messageId":"457","endLine":6,"endColumn":4},{"ruleId":"443","severity":1,"message":"458","line":3,"column":10,"nodeType":"445","messageId":"446","endLine":3,"endColumn":16},{"ruleId":"443","severity":1,"message":"459","line":3,"column":18,"nodeType":"445","messageId":"446","endLine":3,"endColumn":22},{"ruleId":"439","replacedBy":"460"},{"ruleId":"441","replacedBy":"461"},{"ruleId":"443","severity":1,"message":"458","line":1,"column":10,"nodeType":"445","messageId":"446","endLine":1,"endColumn":16},{"ruleId":"443","severity":1,"message":"462","line":1,"column":18,"nodeType":"445","messageId":"446","endLine":1,"endColumn":30},{"ruleId":"443","severity":1,"message":"463","line":1,"column":32,"nodeType":"445","messageId":"446","endLine":1,"endColumn":41},{"ruleId":"443","severity":1,"message":"459","line":1,"column":43,"nodeType":"445","messageId":"446","endLine":1,"endColumn":47},{"ruleId":"443","severity":1,"message":"464","line":4,"column":23,"nodeType":"445","messageId":"446","endLine":4,"endColumn":37},{"ruleId":"443","severity":1,"message":"465","line":1,"column":17,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},{"ruleId":"443","severity":1,"message":"466","line":2,"column":8,"nodeType":"445","messageId":"446","endLine":2,"endColumn":12},{"ruleId":"443","severity":1,"message":"467","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":11},{"ruleId":"443","severity":1,"message":"468","line":9,"column":8,"nodeType":"445","messageId":"446","endLine":9,"endColumn":18},{"ruleId":"443","severity":1,"message":"469","line":13,"column":8,"nodeType":"445","messageId":"446","endLine":13,"endColumn":19},{"ruleId":"443","severity":1,"message":"470","line":15,"column":8,"nodeType":"445","messageId":"446","endLine":15,"endColumn":15},{"ruleId":"443","severity":1,"message":"465","line":6,"column":10,"nodeType":"445","messageId":"446","endLine":6,"endColumn":18},{"ruleId":"443","severity":1,"message":"467","line":2,"column":29,"nodeType":"445","messageId":"446","endLine":2,"endColumn":37},{"ruleId":"443","severity":1,"message":"471","line":39,"column":11,"nodeType":"445","messageId":"446","endLine":39,"endColumn":26},{"ruleId":"443","severity":1,"message":"472","line":43,"column":11,"nodeType":"445","messageId":"446","endLine":43,"endColumn":26},{"ruleId":"443","severity":1,"message":"473","line":7,"column":3,"nodeType":"445","messageId":"446","endLine":7,"endColumn":6},{"ruleId":"443","severity":1,"message":"474","line":10,"column":25,"nodeType":"445","messageId":"446","endLine":10,"endColumn":31},{"ruleId":"443","severity":1,"message":"475","line":10,"column":33,"nodeType":"445","messageId":"446","endLine":10,"endColumn":37},{"ruleId":"443","severity":1,"message":"476","line":12,"column":10,"nodeType":"445","messageId":"446","endLine":12,"endColumn":28},{"ruleId":"443","severity":1,"message":"465","line":13,"column":21,"nodeType":"445","messageId":"446","endLine":13,"endColumn":29},{"ruleId":"443","severity":1,"message":"477","line":14,"column":10,"nodeType":"445","messageId":"446","endLine":14,"endColumn":20},{"ruleId":"443","severity":1,"message":"478","line":15,"column":8,"nodeType":"445","messageId":"446","endLine":15,"endColumn":12},{"ruleId":"443","severity":1,"message":"479","line":15,"column":16,"nodeType":"445","messageId":"446","endLine":15,"endColumn":21},{"ruleId":"443","severity":1,"message":"480","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":9},{"ruleId":"443","severity":1,"message":"480","line":6,"column":3,"nodeType":"445","messageId":"446","endLine":6,"endColumn":9},{"ruleId":"443","severity":1,"message":"465","line":21,"column":10,"nodeType":"445","messageId":"446","endLine":21,"endColumn":18},{"ruleId":"481","severity":1,"message":"482","line":137,"column":28,"nodeType":"483","messageId":"484","endLine":137,"endColumn":30},{"ruleId":"481","severity":1,"message":"482","line":148,"column":31,"nodeType":"483","messageId":"484","endLine":148,"endColumn":33},{"ruleId":"481","severity":1,"message":"482","line":159,"column":31,"nodeType":"483","messageId":"484","endLine":159,"endColumn":33},{"ruleId":"443","severity":1,"message":"473","line":1,"column":22,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},{"ruleId":"443","severity":1,"message":"485","line":1,"column":27,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"451","line":12,"column":15,"nodeType":"445","messageId":"446","endLine":12,"endColumn":21},{"ruleId":"481","severity":1,"message":"482","line":151,"column":21,"nodeType":"483","messageId":"484","endLine":151,"endColumn":23},{"ruleId":"481","severity":1,"message":"482","line":162,"column":24,"nodeType":"483","messageId":"484","endLine":162,"endColumn":26},{"ruleId":"481","severity":1,"message":"482","line":173,"column":24,"nodeType":"483","messageId":"484","endLine":173,"endColumn":26},{"ruleId":"481","severity":1,"message":"482","line":189,"column":25,"nodeType":"483","messageId":"484","endLine":189,"endColumn":27},{"ruleId":"481","severity":1,"message":"482","line":191,"column":28,"nodeType":"483","messageId":"484","endLine":191,"endColumn":30},{"ruleId":"481","severity":1,"message":"482","line":195,"column":27,"nodeType":"483","messageId":"484","endLine":195,"endColumn":29},{"ruleId":"481","severity":1,"message":"482","line":197,"column":30,"nodeType":"483","messageId":"484","endLine":197,"endColumn":32},{"ruleId":"481","severity":1,"message":"482","line":199,"column":30,"nodeType":"483","messageId":"484","endLine":199,"endColumn":32},{"ruleId":"443","severity":1,"message":"485","line":1,"column":27,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},{"ruleId":"443","severity":1,"message":"473","line":1,"column":22,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},{"ruleId":"443","severity":1,"message":"485","line":1,"column":27,"nodeType":"445","messageId":"446","endLine":1,"endColumn":31},"no-native-reassign",["486"],"no-negated-in-lhs",["487"],"@typescript-eslint/no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["488"],"'result' is assigned a value but never used.","'Modal' is defined but never used.","'success' is assigned a value but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Expose' is defined but never used.","'Type' is defined but never used.",["486"],["487"],"'plainToClass' is defined but never used.","'Transform' is defined but never used.","'RequestOptions' is defined but never used.","'useState' is defined but never used.","'clsx' is defined but never used.","'useTheme' is defined but never used.","'IconButton' is defined but never used.","'CssBaseline' is defined but never used.","'Divider' is defined but never used.","'SelectedAgentQP' is defined but never used.","'SelectedGroupQP' is defined but never used.","'Box' is defined but never used.","'Status' is defined but never used.","'Role' is defined but never used.","'clearActionReducer' is defined but never used.","'clearState' is defined but never used.","'User' is defined but never used.","'IUser' is defined but never used.","'Avatar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},"Update the dependencies array to be: [dispatch, error, history, success]",{"range":"491","text":"492"},[1707,1733],"[dispatch, error, history, success]"]